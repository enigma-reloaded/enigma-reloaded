{"version":3,"sources":["components/utils/modal.jsx","lib/hooks/use-local-forage.js","lib/utils/encryption/storage.js","lib/utils/encryption/encrypted-storage.js","lib/utils/encryption/keys.js","components/setup/generate-private-key.jsx","lib/hooks/use-public-key.js","lib/hooks/use-encrypted-storage.js","components/pages/home/show-sharable-public-key.js","lib/utils/format/md5.js","lib/utils/format/keys.js","lib/utils/actions/copy-to-clipboard.js","lib/hooks/use-require-unlock.js","components/pages/home.jsx","components/page/layout.jsx","assets/enigma-logo.jpg","components/pages/unlock.jsx","lib/hooks/use-query-params.js","components/pages/contacts/add-new-contact.jsx","components/pages/contacts.jsx","components/page/navigation.jsx","components/config/router.jsx","app.jsx","reportWebVitals.js","serviceWorkerRegistration.js","index.js","lib/utils/u8-to-base64.js"],"names":["Modal","isOpened","close","children","useEffect","document","body","classList","add","remove","modalContentRef","useRef","useOnClickOutside","className","ref","useLocalForage","keyName","useState","state","setState","localforage","then","value","encryptStorage","EncryptStorage","secret","storage","this","key","data","JSON","stringify","toString","Error","encryptedData","Crypto","encrypt","setItem","a","getItem","decryptedData","decrypt","Utf8","parse","e","removeItem","getItemFromStorage","setItemInStorage","setStoragePin","pin","window","privateKey","publicKey","randomPrivateKey","edUtils","SetupGeneratePrivateKey","isPrivateKeyInitialized","setIsPrivateKeyInitialized","setupPinModal","nameValue","emailValue","pinValue","confirmPinValue","confirmMatch","passwordStrength","submitDisabled","isEmpty","get","onClick","preventDefault","merge","onSubmit","Array","from","name","onChange","target","placeholder","type","strength","required","s","disabled","getPrivateKey","pk","Uint8Array","ed","usePublicKey","getPublicKey","useEncryptedStorage","ShowSharablePublicKey","str","readableKey","u8ToBase64","formatKeyReadable","email","encodedName","encodedEmail","output","text","input","createElement","setAttribute","appendChild","select","result","execCommand","removeChild","copyToClipboard","useRequireUnlock","history","useHistory","location","useLocation","isIdle","useIdle","undefined","setTimeout","push","pathname","HomePage","isUnlocked","AppLayout","UnlockPage","showError","queryParams","URLSearchParams","search","redirectTo","src","logo","alt","AddNewContact","modalOpened","inputPkNameEmail","ContactsPage","PageNavigation","NavigationItem","to","Router","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","u8","Buffer"],"mappings":"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","file":"static/js/main.059d2ab1.chunk.js","sourcesContent":["import useOnClickOutside from 'use-onclickoutside'\nimport {useEffect, useRef} from \"react\";\n\nexport default function Modal({isOpened, close, children}){\n  useEffect(() => {\n    if(isOpened){\n      return document.body.classList.add(\"overflow-y-hidden\");\n    }else{\n      return document.body.classList.remove(\"overflow-y-hidden\");\n    }\n  }, [isOpened]);\n  const modalContentRef = useRef(null)\n  useOnClickOutside(modalContentRef, close)\n  \n  if(!isOpened) return null;\n  \n  return (\n    <>\n      <div className=\"absolute inset-0 bg-gray-500 opacity-70\"/>\n      \n      <div className=\"absolute inset-0 items-center py-20 overflow-y-auto\">\n        <div className=\"mb-20 bg-white w-1/3 p-4 rounded shadow mx-auto\" ref={modalContentRef}>\n          {children}\n        </div>\n      </div>\n    </>\n  )\n}","import {useEffect, useState} from \"react\";\nimport * as localforage from \"localforage\";\n\nexport function useLocalForage(keyName){\n  const [state, setState] = useState();\n  useEffect(() => {\n    localforage.getItem(keyName).then(value => {\n      setState(value);\n    });\n  }, [setState, keyName]);\n  \n  const setStateWrapper = (value) => {\n    setState(value);\n    localforage.setItem(keyName, value);\n  }\n  \n  return [state, setStateWrapper];\n}","import * as localforage from \"localforage\";\nimport {EncryptStorage} from \"./encrypted-storage\";\nlet encryptStorage;\nwindow.localforage = localforage;\n\nexport function getItemFromStorage(keyName){\n  if(!encryptStorage) return null;\n  return encryptStorage.decrypt(keyName);\n}\n\nexport function setItemInStorage(keyName, value){\n  if(!encryptStorage) throw \"Pin not set\"; // eslint-disable-line\n  return encryptStorage.encrypt(keyName, value);\n}\n\nexport function setStoragePin(pin){\n  encryptStorage = new EncryptStorage(pin, localforage);\n}\n\nexport function disableStorage(){\n  encryptStorage = null;\n}","import * as Crypto from 'crypto-js';\n\nexport class EncryptStorage {\n  constructor(secret, storage) {\n    this.secret = secret;\n    this.storage = storage;\n  }\n\n  encrypt(key, data) {\n    if(typeof data === \"object\"){\n    data = JSON.stringify(data);\n  } else if(typeof data === \"number\") {\n    data = data.toString();\n  } else if(typeof data !== \"string\") {\n    throw new Error('invalid type')\n  }\n    const encryptedData = Crypto.AES.encrypt(data, this.secret);\n    return this.storage.setItem(key, encryptedData.toString());\n  }\n  \n  async decrypt(key){\n    const data = await this.storage.getItem(key);\n    let decryptedData = null;\n    if(data) {\n      decryptedData = (Crypto.AES.decrypt(data, this.secret)).toString(Crypto.enc.Utf8);\n      try {\n        decryptedData = JSON.parse(decryptedData);\n      } catch(e) {}\n    }\n    return decryptedData;\n  }\n  \n  remove(key) {\n    return this.storage.removeItem(key);\n  }\n}","import {getItemFromStorage} from \"./storage\";\nimport * as ed from '@starcoin/stc-ed25519';\nimport {isEmpty} from 'lodash';\n\nlet privateKey,\n  publicKey;\n\nexport async function getPrivateKey(){\n  if(!isEmpty(privateKey)) return privateKey\n  return privateKey = await getItemFromStorage('private-key');\n}\n\nexport async function getPublicKey(){\n  if(!isEmpty(publicKey)) return publicKey;\n  \n  let pk = await getPrivateKey();\n  if(isEmpty(pk)) return;\n  pk = Uint8Array.from(pk);\n  return publicKey = await ed.getPublicKey(pk);\n}","import {useState} from \"@hookstate/core\";\nimport Modal from \"../utils/modal\";\nimport { passwordStrength } from 'check-password-strength'\nimport {isEmpty} from 'lodash'\nimport {utils as edUtils} from '@starcoin/stc-ed25519';\nimport {useLocalForage} from \"../../lib/hooks/use-local-forage\";\nimport {setItemInStorage, setStoragePin} from \"../../lib/utils/encryption/storage\";\nconst {randomPrivateKey} = edUtils;\n\nexport default function SetupGeneratePrivateKey({children}){\n  const [isPrivateKeyInitialized, setIsPrivateKeyInitialized] = useLocalForage('pk-initialized');\n  \n  const state = useState({\n    setupPinModal: false,\n    nameValue: \"\",\n    emailValue: \"\",\n    pinValue: \"\",\n    confirmPinValue: \"\",\n    confirmMatch: true,\n    passwordStrength: \"Too weak\"\n  });\n  function openSetupPinModal(e){\n    e.preventDefault();\n    state.merge({setupPinModal: true})\n  }\n  \n  function closeSetupPinModal(e){\n    e.preventDefault();\n    state.merge({setupPinModal: false})\n  }\n  \n  function changePinValue(e){\n    const value = e.target.value;\n    const strength = passwordStrength(value).value\n    state.merge({\n      pinValue: e.target.value,\n      passwordStrength: strength\n    });\n  }\n  \n  function changeConfirmPinValue(e){\n    const value = e.target.value;\n    \n    state.merge((s) => {\n      return {\n        confirmMatch: value === s.pinValue,\n        confirmPinValue: value\n      }\n    })\n  }\n  \n  function generatePrivateKey(e){\n    e.preventDefault();\n    const key = randomPrivateKey();\n    setStoragePin(state.pinValue.get());\n    setItemInStorage('private-key', Array.from(key));\n    setItemInStorage('name', state.nameValue.get());\n    setItemInStorage('email', state.emailValue.get());\n    setIsPrivateKeyInitialized(true);\n  }\n  \n  const submitDisabled = isEmpty(state.pinValue.get()) || state.passwordStrength.get() === \"Too weak\" ||\n    isEmpty(state.confirmPinValue.get()) || !state.confirmMatch.get();\n  \n  function changeNameValue(e){\n    state.merge({nameValue: e.target.value})\n  }\n  \n  function changeEmailValue(e){\n    state.merge({emailValue: e.target.value})\n  }\n  \n  if(isPrivateKeyInitialized) return children;\n  \n  return(\n    <div>\n      <button onClick={openSetupPinModal}>\n        Get started\n      </button>\n      \n      <Modal isOpened={state.setupPinModal.get()} close={closeSetupPinModal}>\n        <form className=\"pure-form pure-form-aligned\" onSubmit={generatePrivateKey}>\n          <fieldset>\n            <legend>PIN setup</legend>\n  \n            <div className=\"pure-control-group\">\n              <input name=\"name\" value={state.nameValue.get()} onChange={changeNameValue} placeholder=\"Enter your name\" className=\"w-full\"/>\n            </div>\n  \n            <div className=\"pure-control-group\">\n              <input type=\"email\" name=\"email\" value={state.emailValue.get()} onChange={changeEmailValue} placeholder=\"Enter email(to have a avatar)\" className=\"w-full\"/>\n            </div>\n  \n            <div className=\"pure-control-group\">\n              <input name=\"pin\" value={state.pinValue.get()} onChange={changePinValue} placeholder=\"Enter new PIN\" className=\"w-full\" required/>\n              <span className=\"pure-form-message\">{state.passwordStrength.get()}</span>\n            </div>\n  \n            <div className=\"pure-control-group\">\n              <input name=\"pinConfirm\" value={state.confirmPinValue.get()} onChange={changeConfirmPinValue} placeholder=\"Confirm your pin\" className=\"w-full\" required/>\n              {\n                !state.confirmMatch.get() &&\n                  <span className=\"pure-form-message\">Pins don't match</span>\n              }\n            </div>\n  \n            <button type=\"submit\" className=\"pure-button pure-button-primary w-full\" disabled={submitDisabled}>\n              Submit\n            </button>\n          </fieldset>\n        </form>\n      </Modal>\n    </div>\n  )\n}","import {useEffect, useState} from \"react\";\nimport {getPublicKey} from \"../utils/encryption/keys\";\n\nexport function usePublicKey(){\n  const [state, setState] = useState();\n  \n  useEffect(() => {\n    getPublicKey().then((publicKey) => {\n      setState(publicKey);\n    });\n  });\n  \n  return state;\n}","import {useEffect, useState} from \"react\";\nimport {getItemFromStorage, setItemInStorage} from \"../utils/encryption/storage\";\n\nexport function useEncryptedStorage(keyName){\n  const [state, setState] = useState();\n  useEffect(() => {\n    getItemFromStorage(keyName).then((value) => {\n      setState(value);\n    })\n  }, [setState, keyName]);\n  \n  const setStateWrapper = (value) => {\n    setState(value);\n    setItemInStorage(keyName, value);\n  }\n  \n  return [state, setStateWrapper];\n}","import {usePublicKey} from \"../../../lib/hooks/use-public-key\";\nimport {formatKeyReadable} from \"../../../lib/utils/format/keys\";\nimport {copyToClipboard} from \"../../../lib/utils/actions/copy-to-clipboard\";\nimport {useEncryptedStorage} from \"../../../lib/hooks/use-encrypted-storage\";\nimport u8ToBase64 from \"../../../lib/utils/u8-to-base64\";\nimport {md5} from \"../../../lib/utils/format/md5\";\n\nexport default function ShowSharablePublicKey(){\n  const publicKey = usePublicKey();\n  const readableKey = formatKeyReadable(publicKey);\n  const [name] = useEncryptedStorage('name');\n  const [email] = useEncryptedStorage('email');\n  const encodedName = name ? u8ToBase64(name) : \"\"\n  const encodedEmail = email ? md5(email) : \"\";\n  const output = `${readableKey}\\\\${encodedName}\\\\${encodedEmail}`;\n  \n  if(!readableKey) return null;\n  \n  function copyPk(e){\n    e.preventDefault();\n    copyToClipboard(output);\n  }\n  \n  return(\n    <div className=\"p-3\">\n      <button className=\"text-center bg-gray-300 hover:bg-gray-200 rounded p-2 border border-solid border-gray-300\" onClick={copyPk}>\n        <div className=\"font-bold\">\n          My public key, name and email hashed\n        </div>\n        <div>\n          {output}\n        </div>\n    \n        <div className=\"text-right text-sm\">\n          Click to copy\n        </div>\n      </button>\n    </div>\n  )\n}","import * as Crypto from 'crypto-js';\n\nexport function md5(str){\n  return Crypto.MD5(str).toString();\n}","import {isEmpty} from 'lodash';\nimport u8ToBase64 from \"../u8-to-base64\";\n\nexport function formatKeyReadable(key){\n  if(isEmpty(key)) return;\n  \n  return u8ToBase64(key);\n}","export function copyToClipboard(text){\n  const input = document.createElement('input');\n  input.setAttribute('value', text);\n  document.body.appendChild(input);\n  input.select();\n  const result = document.execCommand('copy');\n  document.body.removeChild(input);\n  return result;\n}","import { useHistory, useLocation } from \"react-router-dom\";\nimport {useLocalForage} from \"./use-local-forage\";\nimport {useEffect, useState} from \"react\";\nimport {usePublicKey} from \"./use-public-key\";\nimport {useIdle} from 'react-use';\nimport {disableStorage} from \"../utils/encryption/storage\";\n\n\nexport function useRequireUnlock(){\n  const history = useHistory();\n  const location = useLocation();\n  const publicKey = usePublicKey();\n  const [isPrivateKeyInitialized] = useLocalForage('pk-initialized');\n  const [state, setState] = useState(false);\n  const isIdle = useIdle(120e3);\n  \n  useEffect(() => {\n    if(isPrivateKeyInitialized === undefined) return;\n    if(isPrivateKeyInitialized === null) return setState(true);\n    \n    if(publicKey) return setState(true);\n    \n    setTimeout(() => {\n      history.push(`/unlock?redirectTo=${location.pathname}`);\n    }, 50)\n  }, [isPrivateKeyInitialized, history, publicKey, location, setState, location.pathname]);\n  \n  useEffect(() => {\n    if(!publicKey) return;\n    if(!isIdle) return;\n    disableStorage();\n    setTimeout(() => {\n      history.push(`/unlock?redirectTo=${location.pathname}`);\n    }, 50)\n  }, [isIdle, publicKey, history, location.pathname]);\n  \n  return state;\n}","import SetupGeneratePrivateKey from \"../setup/generate-private-key\";\nimport ShowSharablePublicKey from \"./home/show-sharable-public-key\";\nimport {useRequireUnlock} from \"../../lib/hooks/use-require-unlock\";\n\nexport default function HomePage({children}){\n  const isUnlocked = useRequireUnlock();\n  \n  return(\n    <>\n      {children}\n      \n      {\n        isUnlocked &&  <SetupGeneratePrivateKey>\n          <div className=\"w-full md:w-1/3 flex justify-center mx-auto\">\n            <ShowSharablePublicKey/>\n          </div>\n        </SetupGeneratePrivateKey>\n      }\n    </>\n  )\n}","export default function AppLayout({children}){\n  return(\n    <div className=\"p-4\">\n      {children}\n    </div>\n  )\n}","export default __webpack_public_path__ + \"static/media/enigma-logo.d8f45653.jpg\";","import {useQueryParams} from \"../../lib/hooks/use-query-params\";\nimport {useState} from \"@hookstate/core\";\nimport {isEmpty} from 'lodash';\nimport logo from \"../../assets/enigma-logo.jpg\";\nimport {getItemFromStorage, setStoragePin} from \"../../lib/utils/encryption/storage\";\nimport {useHistory} from 'react-router-dom';\n\nexport default function UnlockPage(){\n  const state = useState({pinValue: \"\", showError: false});\n  const history = useHistory();\n  let queryParams  = useQueryParams();\n  \n  async function unlock(e){\n    e.preventDefault();\n    const redirectTo = queryParams.get(\"redirectTo\");\n    setStoragePin(state.pinValue.get());\n  \n    try{\n      const privateKey = await getItemFromStorage('private-key');\n      if(isEmpty(privateKey)){\n        return state.merge({\n          pinValue: \"\",\n          showError: true\n        });\n      }\n      \n      state.merge({\n        pinValue: \"\",\n        showError: false\n      });\n      \n      setTimeout(() => {\n        history.push(redirectTo);\n      }, 50);\n    }catch(e){\n      return state.merge({\n        pinValue: \"\",\n        showError: true\n      });\n    }\n  }\n  \n  function updatePinValue(e){\n    const {value} = e.target;\n    state.merge({pinValue: value});\n  }\n  \n  return(\n    <div className=\"w-full md:w-1/3 mx-auto\">\n      <div className=\"flex justify-center\">\n        <img src={logo} alt=\"enigma\"/>\n      </div>\n      \n      <form className=\"pure-form\" onSubmit={unlock}>\n        <fieldset>\n          \n          <div className=\"pure-control-group pb-4\">\n            <input type=\"password\" value={state.pinValue.get()} onChange={updatePinValue} className=\"w-full\" placeholder=\"Enter your PIN to continue\"/>\n            {\n              state.showError.get() && <span className=\"pure-form-message text-red-500\">Invalid PIN</span>\n            }\n          </div>\n  \n          <button type=\"submit\" className=\"pure-button pure-button-primary w-full\" disabled={isEmpty(state.pinValue.get())}>\n            Unlock\n          </button>\n        </fieldset>\n      </form>\n    </div>\n  )\n}","import {\n  useLocation\n} from \"react-router-dom\";\n\nexport function useQueryParams(){\n  return new URLSearchParams(useLocation().search);\n}","import {useState} from \"@hookstate/core\";\nimport Modal from \"../../utils/modal\";\nimport {isEmpty} from 'lodash';\n\nexport function AddNewContact(){\n  const state = useState({\n    modalOpened: false,\n    inputPkNameEmail: \"\"\n  });\n  \n  function closeModal(){\n    state.merge({modalOpened: false})\n  }\n  \n  function addNewContact(e){\n    e.preventDefault();\n  }\n  \n  function changeInputPkNameEmail(e){\n    const {value} = e.target;\n    state.merge({inputPkNameEmail: value});\n  }\n  \n  function openModal(e){\n    e.preventDefault();\n    state.merge({modalOpened: true});\n  }\n  \n  return(\n    <div>\n      <button className=\"bg-black text-white p-3\" onClick={openModal}>\n        + Add new contact\n      </button>\n      \n      <Modal isOpened={state.modalOpened.get()} close={closeModal}>\n        <form className=\"pure-form pure-form-aligned\" onSubmit={addNewContact}>\n          <fieldset>\n            <legend>Contact public key, name and email hashed</legend>\n    \n            <div className=\"pure-control-group\">\n              <input name=\"inputPkNameEmail\" value={state.inputPkNameEmail.get()} onChange={changeInputPkNameEmail} placeholder=\"Paste the contact code\" className=\"w-full\"/>\n            </div>\n  \n            <button type=\"submit\" className=\"pure-button pure-button-primary bg-black w-full\" disabled={isEmpty(state.inputPkNameEmail.get())}>\n              Add\n            </button>\n          </fieldset>\n        </form>\n      </Modal>\n    </div>\n  )\n}","import {AddNewContact} from \"./contacts/add-new-contact\";\nimport {useRequireUnlock} from \"../../lib/hooks/use-require-unlock\";\n\nexport default function ContactsPage({children}){\n  const isUnlocked = useRequireUnlock();\n  \n  \n  return(\n    <div>\n      <div>\n        {children}\n      </div>\n      \n      {\n        isUnlocked && <div className=\"w-full md:w-1/3 mx-auto pt-4\">\n          <h1 className=\"text-center text-2xl font-bold\">Contacts</h1>\n  \n          <div className=\"flex justify-end\">\n            <AddNewContact/>\n          </div>\n        </div>\n      }\n    </div>\n  )\n}","import {Link} from \"react-router-dom\";\nimport logo from \"../../assets/enigma-logo.jpg\";\n\nexport default function PageNavigation(){\n  return(\n    <>\n      <div className=\"flex justify-center\">\n        <img src={logo} alt=\"enigma\"/>\n      </div>\n      <div className=\"flex flex-wrap justify-center\">\n        <NavigationItem text=\"Home\" to=\"/\"/>\n        <NavigationItem text=\"Contacts\" to=\"/contacts\"/>\n      </div>\n    </>\n  )\n}\n\nfunction NavigationItem({text, to}){\n  return(\n    <div className=\"mx-1 text-center bg-black p-2 rounded text-white\">\n      <Link to={to}>{text}</Link>\n    </div>\n  )\n}","import {\n  HashRouter\n} from 'react-router-dom';\n\nexport default function Router({children}){\n  return(\n    <HashRouter>\n      {children}\n    </HashRouter>\n  )\n}","import HomePage from \"./components/pages/home\";\nimport AppLayout from \"./components/page/layout\";\nimport {\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport UnlockPage from \"./components/pages/unlock\";\nimport ContactsPage from \"./components/pages/contacts\";\nimport PageNavigation from \"./components/page/navigation\";\nimport Router from \"./components/config/router\";\n\nexport default function App(){\n  return(\n    <Router>\n      <AppLayout>\n        <Switch>\n          <Route path=\"/\" exact>\n            <HomePage>\n              <PageNavigation/>\n            </HomePage>\n          </Route>\n    \n          <Route path=\"/unlock\">\n            <UnlockPage/>\n          </Route>\n    \n          <Route path=\"/contacts\">\n            <ContactsPage>\n              <PageNavigation/>\n            </ContactsPage>\n          </Route>\n    \n          <Route path=\"*\">\n          </Route>\n        </Switch>\n      </AppLayout>\n    </Router>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './tailwind.css'\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n\nreportWebVitals();\n","export default function u8ToBase64(u8){\n  return Buffer.from(u8).toString('base64');\n}"],"sourceRoot":""}