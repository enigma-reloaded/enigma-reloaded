{"version":3,"sources":["lib/utils/u8-to-base64.js","components/utils/modal.jsx","lib/hooks/use-local-forage.js","lib/utils/encryption/storage.js","lib/utils/encryption/encrypted-storage.js","lib/utils/encryption/keys.js","components/setup/generate-private-key.jsx","lib/hooks/use-public-key.js","lib/hooks/use-encrypted-storage.js","components/pages/home/show-sharable-public-key.js","lib/utils/format/md5.js","lib/utils/format/keys.js","lib/utils/actions/copy-to-clipboard.js","lib/hooks/use-require-unlock.js","components/pages/home.jsx","components/page/layout.jsx","assets/enigma-logo.jpg","components/pages/unlock.jsx","lib/hooks/use-query-params.js","components/pages/contacts/add-new-contact.jsx","components/pages/contacts.jsx","components/page/navigation.jsx","app.jsx","reportWebVitals.js","index.js"],"names":["u8ToBase64","u8","Buffer","from","toString","Modal","isOpened","close","children","useEffect","document","body","classList","add","remove","modalContentRef","useRef","useOnClickOutside","className","ref","useLocalForage","keyName","useState","state","setState","localforage","then","value","encryptStorage","EncryptStorage","secret","storage","this","key","data","JSON","stringify","Error","encryptedData","Crypto","encrypt","setItem","a","getItem","decryptedData","decrypt","Utf8","parse","e","removeItem","getItemFromStorage","setItemInStorage","setStoragePin","pin","window","privateKey","publicKey","randomPrivateKey","edUtils","SetupGeneratePrivateKey","isPrivateKeyInitialized","setIsPrivateKeyInitialized","setupPinModal","nameValue","emailValue","pinValue","confirmPinValue","confirmMatch","passwordStrength","submitDisabled","isEmpty","get","onClick","preventDefault","merge","onSubmit","Array","name","onChange","target","placeholder","type","strength","required","s","disabled","getPrivateKey","pk","Uint8Array","ed","usePublicKey","getPublicKey","useEncryptedStorage","ShowSharablePublicKey","str","readableKey","formatKeyReadable","email","encodedName","encodedEmail","output","text","input","createElement","setAttribute","appendChild","select","result","execCommand","removeChild","copyToClipboard","useRequireUnlock","history","useHistory","location","useLocation","isIdle","useIdle","undefined","setTimeout","push","pathname","HomePage","isUnlocked","AppLayout","UnlockPage","showError","queryParams","URLSearchParams","search","redirectTo","src","logo","alt","AddNewContact","modalOpened","inputPkNameEmail","ContactsPage","PageNavigation","NavigationItem","to","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fdd356c7.chunk.js","sourcesContent":["export default function u8ToBase64(u8){\n  return Buffer.from(u8).toString('base64');\n}","import useOnClickOutside from 'use-onclickoutside'\nimport {useEffect, useRef} from \"react\";\n\nexport default function Modal({isOpened, close, children}){\n  useEffect(() => {\n    if(isOpened){\n      return document.body.classList.add(\"overflow-y-hidden\");\n    }else{\n      return document.body.classList.remove(\"overflow-y-hidden\");\n    }\n  }, [isOpened]);\n  const modalContentRef = useRef(null)\n  useOnClickOutside(modalContentRef, close)\n  \n  if(!isOpened) return null;\n  \n  return (\n    <>\n      <div className=\"absolute inset-0 bg-gray-500 opacity-70\"/>\n      \n      <div className=\"absolute inset-0 items-center py-20 overflow-y-auto\">\n        <div className=\"mb-20 bg-white w-1/3 p-4 rounded shadow mx-auto\" ref={modalContentRef}>\n          {children}\n        </div>\n      </div>\n    </>\n  )\n}","import {useEffect, useState} from \"react\";\nimport * as localforage from \"localforage\";\n\nexport function useLocalForage(keyName){\n  const [state, setState] = useState();\n  useEffect(() => {\n    localforage.getItem(keyName).then(value => {\n      setState(value);\n    });\n  }, [setState, keyName]);\n  \n  const setStateWrapper = (value) => {\n    setState(value);\n    localforage.setItem(keyName, value);\n  }\n  \n  return [state, setStateWrapper];\n}","import * as localforage from \"localforage\";\nimport {EncryptStorage} from \"./encrypted-storage\";\nlet encryptStorage;\nwindow.localforage = localforage;\n\nexport function getItemFromStorage(keyName){\n  if(!encryptStorage) return null;\n  return encryptStorage.decrypt(keyName);\n}\n\nexport function setItemInStorage(keyName, value){\n  if(!encryptStorage) throw \"Pin not set\"; // eslint-disable-line\n  return encryptStorage.encrypt(keyName, value);\n}\n\nexport function setStoragePin(pin){\n  encryptStorage = new EncryptStorage(pin, localforage);\n}\n\nexport function disableStorage(){\n  encryptStorage = null;\n}","import * as Crypto from 'crypto-js';\n\nexport class EncryptStorage {\n  constructor(secret, storage) {\n    this.secret = secret;\n    this.storage = storage;\n  }\n\n  encrypt(key, data) {\n    if(typeof data === \"object\"){\n    data = JSON.stringify(data);\n  } else if(typeof data === \"number\") {\n    data = data.toString();\n  } else if(typeof data !== \"string\") {\n    throw new Error('invalid type')\n  }\n    const encryptedData = Crypto.AES.encrypt(data, this.secret);\n    return this.storage.setItem(key, encryptedData.toString());\n  }\n  \n  async decrypt(key){\n    const data = await this.storage.getItem(key);\n    let decryptedData = null;\n    if(data) {\n      decryptedData = (Crypto.AES.decrypt(data, this.secret)).toString(Crypto.enc.Utf8);\n      try {\n        decryptedData = JSON.parse(decryptedData);\n      } catch(e) {}\n    }\n    return decryptedData;\n  }\n  \n  remove(key) {\n    return this.storage.removeItem(key);\n  }\n}","import {getItemFromStorage} from \"./storage\";\nimport * as ed from 'noble-ed25519';\nimport {isEmpty} from 'lodash';\n\nlet privateKey,\n  publicKey;\n\nexport async function getPrivateKey(){\n  if(!isEmpty(privateKey)) return privateKey\n  return privateKey = await getItemFromStorage('private-key');\n}\n\nexport async function getPublicKey(){\n  if(!isEmpty(publicKey)) return publicKey;\n  \n  let pk = await getPrivateKey();\n  if(isEmpty(pk)) return;\n  pk = Uint8Array.from(pk);\n  return publicKey = await ed.getPublicKey(pk);\n}","import {useState} from \"@hookstate/core\";\nimport Modal from \"../utils/modal\";\nimport { passwordStrength } from 'check-password-strength'\nimport {isEmpty} from 'lodash'\nimport {utils as edUtils} from 'noble-ed25519';\nimport {useLocalForage} from \"../../lib/hooks/use-local-forage\";\nimport {setItemInStorage, setStoragePin} from \"../../lib/utils/encryption/storage\";\nconst {randomPrivateKey} = edUtils;\n\nexport default function SetupGeneratePrivateKey({children}){\n  const [isPrivateKeyInitialized, setIsPrivateKeyInitialized] = useLocalForage('pk-initialized');\n  \n  const state = useState({\n    setupPinModal: false,\n    nameValue: \"\",\n    emailValue: \"\",\n    pinValue: \"\",\n    confirmPinValue: \"\",\n    confirmMatch: true,\n    passwordStrength: \"Too weak\"\n  });\n  function openSetupPinModal(e){\n    e.preventDefault();\n    state.merge({setupPinModal: true})\n  }\n  \n  function closeSetupPinModal(e){\n    e.preventDefault();\n    state.merge({setupPinModal: false})\n  }\n  \n  function changePinValue(e){\n    const value = e.target.value;\n    const strength = passwordStrength(value).value\n    state.merge({\n      pinValue: e.target.value,\n      passwordStrength: strength\n    });\n  }\n  \n  function changeConfirmPinValue(e){\n    const value = e.target.value;\n    \n    state.merge((s) => {\n      return {\n        confirmMatch: value === s.pinValue,\n        confirmPinValue: value\n      }\n    })\n  }\n  \n  function generatePrivateKey(e){\n    e.preventDefault();\n    const key = randomPrivateKey();\n    setStoragePin(state.pinValue.get());\n    setItemInStorage('private-key', Array.from(key));\n    setItemInStorage('name', state.nameValue.get());\n    setItemInStorage('email', state.emailValue.get());\n    setIsPrivateKeyInitialized(true);\n  }\n  \n  const submitDisabled = isEmpty(state.pinValue.get()) || state.passwordStrength.get() === \"Too weak\" ||\n    isEmpty(state.confirmPinValue.get()) || !state.confirmMatch.get();\n  \n  function changeNameValue(e){\n    state.merge({nameValue: e.target.value})\n  }\n  \n  function changeEmailValue(e){\n    state.merge({emailValue: e.target.value})\n  }\n  \n  if(isPrivateKeyInitialized) return children;\n  \n  return(\n    <div>\n      <button onClick={openSetupPinModal}>\n        Get started\n      </button>\n      \n      <Modal isOpened={state.setupPinModal.get()} close={closeSetupPinModal}>\n        <form className=\"pure-form pure-form-aligned\" onSubmit={generatePrivateKey}>\n          <fieldset>\n            <legend>PIN setup</legend>\n  \n            <div className=\"pure-control-group\">\n              <input name=\"name\" value={state.nameValue.get()} onChange={changeNameValue} placeholder=\"Enter your name\" className=\"w-full\"/>\n            </div>\n  \n            <div className=\"pure-control-group\">\n              <input type=\"email\" name=\"email\" value={state.emailValue.get()} onChange={changeEmailValue} placeholder=\"Enter email(to have a avatar)\" className=\"w-full\"/>\n            </div>\n  \n            <div className=\"pure-control-group\">\n              <input name=\"pin\" value={state.pinValue.get()} onChange={changePinValue} placeholder=\"Enter new PIN\" className=\"w-full\" required/>\n              <span className=\"pure-form-message\">{state.passwordStrength.get()}</span>\n            </div>\n  \n            <div className=\"pure-control-group\">\n              <input name=\"pinConfirm\" value={state.confirmPinValue.get()} onChange={changeConfirmPinValue} placeholder=\"Confirm your pin\" className=\"w-full\" required/>\n              {\n                !state.confirmMatch.get() &&\n                  <span className=\"pure-form-message\">Pins don't match</span>\n              }\n            </div>\n  \n            <button type=\"submit\" className=\"pure-button pure-button-primary w-full\" disabled={submitDisabled}>\n              Submit\n            </button>\n          </fieldset>\n        </form>\n      </Modal>\n    </div>\n  )\n}","import {useEffect, useState} from \"react\";\nimport {getPublicKey} from \"../utils/encryption/keys\";\n\nexport function usePublicKey(){\n  const [state, setState] = useState();\n  \n  useEffect(() => {\n    getPublicKey().then((publicKey) => {\n      setState(publicKey);\n    });\n  });\n  \n  return state;\n}","import {useEffect, useState} from \"react\";\nimport {getItemFromStorage, setItemInStorage} from \"../utils/encryption/storage\";\n\nexport function useEncryptedStorage(keyName){\n  const [state, setState] = useState();\n  useEffect(() => {\n    getItemFromStorage(keyName).then((value) => {\n      setState(value);\n    })\n  }, [setState, keyName]);\n  \n  const setStateWrapper = (value) => {\n    setState(value);\n    setItemInStorage(keyName, value);\n  }\n  \n  return [state, setStateWrapper];\n}","import {usePublicKey} from \"../../../lib/hooks/use-public-key\";\nimport {formatKeyReadable} from \"../../../lib/utils/format/keys\";\nimport {copyToClipboard} from \"../../../lib/utils/actions/copy-to-clipboard\";\nimport {useEncryptedStorage} from \"../../../lib/hooks/use-encrypted-storage\";\nimport u8ToBase64 from \"../../../lib/utils/u8-to-base64\";\nimport {md5} from \"../../../lib/utils/format/md5\";\n\nexport default function ShowSharablePublicKey(){\n  const publicKey = usePublicKey();\n  const readableKey = formatKeyReadable(publicKey);\n  const [name] = useEncryptedStorage('name');\n  const [email] = useEncryptedStorage('email');\n  const encodedName = name ? u8ToBase64(name) : \"\"\n  const encodedEmail = email ? md5(email) : \"\";\n  const output = `${readableKey}\\\\${encodedName}\\\\${encodedEmail}`;\n  \n  if(!readableKey) return null;\n  \n  function copyPk(e){\n    e.preventDefault();\n    copyToClipboard(output);\n  }\n  \n  return(\n    <div className=\"p-3\">\n      <button className=\"text-center bg-gray-300 hover:bg-gray-200 rounded p-2 border border-solid border-gray-300\" onClick={copyPk}>\n        <div className=\"font-bold\">\n          My public key, name and email hashed\n        </div>\n        <div>\n          {output}\n        </div>\n    \n        <div className=\"text-right text-sm\">\n          Click to copy\n        </div>\n      </button>\n    </div>\n  )\n}","import * as Crypto from 'crypto-js';\n\nexport function md5(str){\n  return Crypto.MD5(str).toString();\n}","import {isEmpty} from 'lodash';\nimport u8ToBase64 from \"../u8-to-base64\";\n\nexport function formatKeyReadable(key){\n  if(isEmpty(key)) return;\n  \n  return u8ToBase64(key);\n}","export function copyToClipboard(text){\n  const input = document.createElement('input');\n  input.setAttribute('value', text);\n  document.body.appendChild(input);\n  input.select();\n  const result = document.execCommand('copy');\n  document.body.removeChild(input);\n  return result;\n}","import { useHistory, useLocation } from \"react-router-dom\";\nimport {useLocalForage} from \"./use-local-forage\";\nimport {useEffect, useState} from \"react\";\nimport {usePublicKey} from \"./use-public-key\";\nimport {useIdle} from 'react-use';\nimport {disableStorage} from \"../utils/encryption/storage\";\n\n\nexport function useRequireUnlock(){\n  const history = useHistory();\n  const location = useLocation();\n  const publicKey = usePublicKey();\n  const [isPrivateKeyInitialized] = useLocalForage('pk-initialized');\n  const [state, setState] = useState(false);\n  const isIdle = useIdle(120e3);\n  \n  useEffect(() => {\n    if(isPrivateKeyInitialized === undefined) return;\n    if(isPrivateKeyInitialized === null) return setState(true);\n    \n    if(publicKey) return setState(true);\n    \n    setTimeout(() => {\n      history.push(`/unlock?redirectTo=${location.pathname}`);\n    }, 50)\n  }, [isPrivateKeyInitialized, history, publicKey, location, setState, location.pathname]);\n  \n  useEffect(() => {\n    if(!publicKey) return;\n    if(!isIdle) return;\n    disableStorage();\n    setTimeout(() => {\n      history.push(`/unlock?redirectTo=${location.pathname}`);\n    }, 50)\n  }, [isIdle, publicKey, history, location.pathname]);\n  \n  return state;\n}","import SetupGeneratePrivateKey from \"../setup/generate-private-key\";\nimport ShowSharablePublicKey from \"./home/show-sharable-public-key\";\nimport {useRequireUnlock} from \"../../lib/hooks/use-require-unlock\";\n\nexport default function HomePage({children}){\n  const isUnlocked = useRequireUnlock();\n  \n  return(\n    <>\n      {children}\n      \n      {\n        isUnlocked &&  <SetupGeneratePrivateKey>\n          <div className=\"w-full md:w-1/3 flex justify-center mx-auto\">\n            <ShowSharablePublicKey/>\n          </div>\n        </SetupGeneratePrivateKey>\n      }\n    </>\n  )\n}","export default function AppLayout({children}){\n  return(\n    <div className=\"p-4\">\n      {children}\n    </div>\n  )\n}","export default __webpack_public_path__ + \"static/media/enigma-logo.d8f45653.jpg\";","import {useQueryParams} from \"../../lib/hooks/use-query-params\";\nimport {useState} from \"@hookstate/core\";\nimport {isEmpty} from 'lodash';\nimport logo from \"../../assets/enigma-logo.jpg\";\nimport {getItemFromStorage, setStoragePin} from \"../../lib/utils/encryption/storage\";\nimport {useHistory} from 'react-router-dom';\n\nexport default function UnlockPage(){\n  const state = useState({pinValue: \"\", showError: false});\n  const history = useHistory();\n  let queryParams  = useQueryParams();\n  \n  async function unlock(e){\n    e.preventDefault();\n    const redirectTo = queryParams.get(\"redirectTo\");\n    setStoragePin(state.pinValue.get());\n  \n    try{\n      const privateKey = await getItemFromStorage('private-key');\n      if(isEmpty(privateKey)){\n        return state.merge({\n          pinValue: \"\",\n          showError: true\n        });\n      }\n      \n      state.merge({\n        pinValue: \"\",\n        showError: false\n      });\n      \n      setTimeout(() => {\n        history.push(redirectTo);\n      }, 50);\n    }catch(e){\n      return state.merge({\n        pinValue: \"\",\n        showError: true\n      });\n    }\n  }\n  \n  function updatePinValue(e){\n    const {value} = e.target;\n    state.merge({pinValue: value});\n  }\n  \n  return(\n    <div className=\"w-full md:w-1/3 mx-auto\">\n      <div className=\"flex justify-center\">\n        <img src={logo} alt=\"enigma\"/>\n      </div>\n      \n      <form className=\"pure-form\" onSubmit={unlock}>\n        <fieldset>\n          \n          <div className=\"pure-control-group pb-4\">\n            <input type=\"password\" value={state.pinValue.get()} onChange={updatePinValue} className=\"w-full\" placeholder=\"Enter your PIN to continue\"/>\n            {\n              state.showError.get() && <span className=\"pure-form-message text-red-500\">Invalid PIN</span>\n            }\n          </div>\n  \n          <button type=\"submit\" className=\"pure-button pure-button-primary w-full\" disabled={isEmpty(state.pinValue.get())}>\n            Unlock\n          </button>\n        </fieldset>\n      </form>\n    </div>\n  )\n}","import {\n  useLocation\n} from \"react-router-dom\";\n\nexport function useQueryParams(){\n  return new URLSearchParams(useLocation().search);\n}","import {useState} from \"@hookstate/core\";\nimport Modal from \"../../utils/modal\";\nimport {isEmpty} from 'lodash';\n\nexport function AddNewContact(){\n  const state = useState({\n    modalOpened: false,\n    inputPkNameEmail: \"\"\n  });\n  \n  function closeModal(){\n    state.merge({modalOpened: false})\n  }\n  \n  function addNewContact(e){\n    e.preventDefault();\n  }\n  \n  function changeInputPkNameEmail(e){\n    const {value} = e.target;\n    state.merge({inputPkNameEmail: value});\n  }\n  \n  function openModal(e){\n    e.preventDefault();\n    state.merge({modalOpened: true});\n  }\n  \n  return(\n    <div>\n      <button className=\"bg-black text-white p-3\" onClick={openModal}>\n        + Add new contact\n      </button>\n      \n      <Modal isOpened={state.modalOpened.get()} close={closeModal}>\n        <form className=\"pure-form pure-form-aligned\" onSubmit={addNewContact}>\n          <fieldset>\n            <legend>Contact public key, name and email hashed</legend>\n    \n            <div className=\"pure-control-group\">\n              <input name=\"inputPkNameEmail\" value={state.inputPkNameEmail.get()} onChange={changeInputPkNameEmail} placeholder=\"Paste the contact code\" className=\"w-full\"/>\n            </div>\n  \n            <button type=\"submit\" className=\"pure-button pure-button-primary bg-black w-full\" disabled={isEmpty(state.inputPkNameEmail.get())}>\n              Add\n            </button>\n          </fieldset>\n        </form>\n      </Modal>\n    </div>\n  )\n}","import {AddNewContact} from \"./contacts/add-new-contact\";\nimport {useRequireUnlock} from \"../../lib/hooks/use-require-unlock\";\n\nexport default function ContactsPage({children}){\n  const isUnlocked = useRequireUnlock();\n  \n  \n  return(\n    <div>\n      <div>\n        {children}\n      </div>\n      \n      {\n        isUnlocked && <div className=\"w-full md:w-1/3 mx-auto pt-4\">\n          <h1 className=\"text-center text-2xl font-bold\">Contacts</h1>\n  \n          <div className=\"flex justify-end\">\n            <AddNewContact/>\n          </div>\n        </div>\n      }\n    </div>\n  )\n}","import {Link} from \"react-router-dom\";\nimport logo from \"../../assets/enigma-logo.jpg\";\n\nexport default function PageNavigation(){\n  return(\n    <>\n      <div className=\"flex justify-center\">\n        <img src={logo} alt=\"enigma\"/>\n      </div>\n      <div className=\"flex flex-wrap justify-center\">\n        <NavigationItem text=\"Home\" to=\"/\"/>\n        <NavigationItem text=\"Contacts\" to=\"/contacts\"/>\n      </div>\n    </>\n  )\n}\n\nfunction NavigationItem({text, to}){\n  return(\n    <div className=\"mx-1 text-center bg-black p-2 rounded text-white\">\n      <Link to={to}>{text}</Link>\n    </div>\n  )\n}","import HomePage from \"./components/pages/home\";\nimport AppLayout from \"./components/page/layout\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport UnlockPage from \"./components/pages/unlock\";\nimport ContactsPage from \"./components/pages/contacts\";\nimport PageNavigation from \"./components/page/navigation\";\n\nexport default function App(){\n  return(\n    <Router>\n      <AppLayout>\n        <Switch>\n          <Route path=\"/\" exact>\n            <HomePage>\n              <PageNavigation/>\n            </HomePage>\n          </Route>\n    \n          <Route path=\"/unlock\">\n            <UnlockPage/>\n          </Route>\n    \n          <Route path=\"/contacts\">\n            <ContactsPage>\n              <PageNavigation/>\n            </ContactsPage>\n          </Route>\n    \n          <Route path=\"*\">\n          </Route>\n        </Switch>\n      </AppLayout>\n    </Router>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './tailwind.css'\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}