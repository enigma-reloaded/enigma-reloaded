{"version":3,"sources":["serviceWorkerRegistration.js","lib/hooks/use-local-forage.js","lib/feedback/error.js","lib/utils/encryption/encrypted-storage.js","lib/utils/encryption/storage.js","lib/hooks/use-key-pairs.js","components/pages/home/home-description/faq-question.jsx","components/pages/home/home-description/about.jsx","assets/enigma-logo.jpg","components/pages/home/home-page-description.jsx","components/utils/modal.jsx","components/setup/generate-private-key.jsx","lib/utils/encryption/generate-keys.js","components/page/app-setup.jsx","components/page/navigation.jsx","components/page/unlocked.jsx","lib/hooks/use-require-unlock.js","components/page/page-title.jsx","components/pages/about.jsx","components/page/layout.jsx","lib/utils/files/download-file.js","lib/hooks/use-encrypted-storage.js","components/pages/backup.jsx","lib/utils/actions/copy-to-clipboard.js","lib/feedback/success.js","lib/utils/undetectable/split-string.js","lib/utils/numbers/random-number.js","lib/private-messages/private-message-record.js","lib/private-messages/private-messages-store.js","lib/contacts/record-contact.js","lib/contacts/contacts-store.js","assets/user-placeholder.svg","components/contacts/avatar.jsx","components/pages/contact/edit-contact.jsx","lib/utils/encryption/keys.js","lib/utils/undetectable/format-to-base-64-undetectable.js","lib/utils/encryption/encrypt-message.js","components/pages/contact/create-new-private-message.jsx","lib/utils/undetectable/decode-base-64-undetectable.js","lib/utils/encryption/decrypt-message.js","components/pages/contact/decode-new-private-message.jsx","lib/utils/encryption/decrypt-file.js","components/pages/contact/decrypt-file.jsx","lib/utils/encryption/encrypt-file.js","components/pages/contact/encrypt-file.jsx","lib/utils/string/merge-styles.js","components/pages/contact/message.jsx","components/pages/home/show-sharable-public-key.jsx","components/pages/contact/private-messages.jsx","components/pages/contact/public-messages.jsx","components/pages/contact.jsx","components/pages/contacts/add-new-contact.jsx","lib/contacts/import-contact-from-string.js","components/pages/contacts/contact-list-item.jsx","components/pages/contacts/ contacts-list.jsx","components/pages/contacts/contacts-store-loader.jsx","components/pages/contacts/toggle-enable-gravatar.jsx","components/pages/contacts.jsx","lib/utils/format/md5.js","components/pages/home/edit-profile.jsx","lib/utils/format/string-to-u8.js","lib/utils/format/keys.js","components/pages/home.jsx","components/pages/page-not-found.jsx","components/config/router.jsx","lib/backup/restore-from-json-file.js","components/pages/unlock.jsx","lib/hooks/use-query-params.js","app.jsx","reportWebVitals.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","globalState","createState","useLocalForage","keyName","useState","useEffect","undefined","get","localforage","value","merge","outputValue","feedbackError","message","toast","encryptStorage","EncryptStorage","secret","storage","this","key","data","JSON","stringify","toString","Error","result","encryptedData","Crypto","encrypt","setItem","e","a","getItem","decryptedData","decrypt","Utf8","parse","removeItem","store","privateKey","publicKey","useKeyPairs","setKeyPair","getItemFromStorage","deleteItemInStorage","setItemInStorage","setStoragePin","pin","exportStorage","iterate","disableStorage","FaqQuestion","title","children","className","EnigmaAbout","href","target","HomePageDescription","button","src","logo","alt","Modal","isOpened","close","document","body","classList","add","remove","modalContentRef","useRef","useOnClickOutside","ref","SetupGeneratePrivateKey","setIsPrivateKeyInitialized","confirmMatch","confirmPinValue","emailValue","nameValue","passwordStrength","pinValue","setupPinModal","submitDisabled","isEmpty","onClick","preventDefault","onSubmit","keyPair","box","Array","from","secretKey","toLowerCase","replace","name","onChange","placeholder","type","strength","required","length","s","disabled","AppSetup","useLocation","history","useHistory","isPrivateKeyInitialized","initialized","notReady","pathname","push","PageNavigation","NavigationItem","text","to","setTimeout","Unlocked","isUnlocked","setState","isIdle","useIdle","useRequireUnlock","UnlockedRoute","opts","pageTitle","buildPageTitle","input","PageTitle","AboutPage","AppLayout","downloadFile","blob","fileName","url","URL","createObjectURL","createElement","download","appendChild","click","revokeObjectURL","useEncryptedStorage","BackupPage","buttonDisabled","Blob","copyToClipboard","setAttribute","select","execCommand","removeChild","feedBackSuccess","success","undetectableSplitString","str","nextWordSize","min","max","output","strLng","i","Math","floor","random","PrivateMessageRecord","id","messageRaw","encryptedMessage","contact","createdAt","mine","messages","set","m","splice","rawMessages","serialize","substring","contactIndex","findIndex","filter","none","createNewPrivateMessageRecord","Date","toISOString","uuidv4","record","save","insertDecryptedMessageRecord","loadPrivateMessagesForContact","map","loadedFromStorage","RecordContact","emailHash","contactRecord","contacts","existingContact","find","c","Object","assign","serializeWithoutId","contactsStore","removeContact","hookstate","getContactsStore","sortedContacts","sortBy","contactStore","ContactAvatar","height","width","gravatarEnabled","displayedEmailHash","userPlaceholder","EditContact","modalIsOpened","closeModal","formatToBase64Undetectable","string","encodeBase64","getPrivateKey","pk","Uint8Array","encryptMessage","publicKeyString","messageString","pubKeyUInt8Array","decodeBase64","msgUInt8Array","decodeUTF8","nonce","randomBytes","nonceLength","formatNonce","sample","CreateNewPrivateMessage","editorRef","current","focus","reactUseState","EditorState","createEmpty","editorState","setEditorState","rawContent","convertToRaw","getCurrentContent","blocks","block","trim","join","copyToClipBoard","hasText","decodeBase64Undetectable","base64String","restoreBase64String","base64StringUndetectable","slice","decryptMessage","encryptedString","split","encryptedMessageString","nonceString","decryptedMessage","open","encodeUTF8","DecodeNewPrivateMessage","encryptedContentRaw","decryptFile","encryptedFile","fullExtension","extension","arrayBuffer","decryptedFileInt8","decryptedFile","DecryptFile","inputRef","fileProcessing","files","encryptFile","file","outputFileIntArray","outputFile","pop","EncryptFile","mergeStyles","forEach","blockOfClasses","Message","ownerClassContainer","ownerClass","datetime","destroy","copyTimeout","PrivateMessages","loadPrivateMessages","viewportRef","items","itemMinSize","PublicMessages","ContactPage","useParams","useRouteMatch","path","ready","getContact","exact","AddNewContact","inputPkNameEmail","modalOpened","atob","importContactFromString","ContactListItem","ContactsList","ContactsStoreLoader","setContactsStore","ToggleEnableGravatar","setGravatar","checked","ContactsPage","md5","cryptoMd5","EditProfile","setName","email","setEmail","ShowSharablePublicKey","readableKey","keyNames","promises","Promise","all","values","v","useMultipleEncryptedStorage","encodedName","TextEncoder","encode","encodedEmail","showCopied","clearTimeout","HomePage","PageNotFound","Router","restoreBackupFromJsonFile","resolve","fileReader","FileReader","onload","json","k","readAsText","UnlockPage","backupValue","showError","useReactState","fileState","setFileState","queryParams","URLSearchParams","search","redirectTo","backupFile","accept","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","process","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.f3daea25.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n              'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n                console.log(\n                    'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.',\n                );\n\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch((error) => {\n        console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n      .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n        // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n        // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log('No internet connection found. App is running in offline mode.');\n      });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n        .then((registration) => {\n          registration.unregister();\n        })\n        .catch((error) => {\n          console.error(error.message);\n        });\n  }\n}\n","import * as localforage from 'localforage';\nimport {createState, useState} from '@hookstate/core';\nimport {useEffect} from 'react';\nconst globalState = createState({});\n\nexport function useLocalForage(keyName) {\n  const state = useState(globalState);\n\n  useEffect(() => {\n    if (state[keyName].get() !== undefined) return;\n\n    localforage.getItem(keyName).then((value) => {\n      state.merge({\n        [keyName]: value,\n      });\n    });\n  }, [keyName, state]);\n\n  function setter(value) {\n    state.merge({\n      [keyName]: value,\n    });\n    localforage.setItem(keyName, value);\n  }\n  let outputValue = state[keyName].get();\n  if (outputValue === undefined) {\n    outputValue = 'NOT_READY';\n  }\n\n  return [outputValue, setter];\n}","import {toast} from 'react-toastify';\n\nexport function feedbackError(message) {\n  toast.error(message);\n}","import * as Crypto from 'crypto-js';\nimport {feedbackError} from '../../feedback/error';\n\nexport class EncryptStorage {\n  constructor(secret, storage) {\n    this.secret = secret;\n    this.storage = storage;\n  }\n\n  encrypt(key, data) {\n    if (typeof data === 'object') {\n      data = JSON.stringify(data);\n    } else if (typeof data === 'number') {\n      data = data.toString();\n    } else if (typeof data !== 'string') {\n      throw new Error('invalid type');\n    }\n    const encryptedData = Crypto.AES.encrypt(data, this.secret);\n    let result;\n\n    try {\n      result = this.storage.setItem(key, encryptedData.toString());\n    } catch (e) {\n      feedbackError('Unable to save more data');\n      throw e;\n    }\n\n    return result;\n  }\n\n  async decrypt(key) {\n    const data = await this.storage.getItem(key);\n    let decryptedData = null;\n    if (data) {\n      decryptedData = (Crypto.AES.decrypt(data, this.secret)).toString(Crypto.enc.Utf8);\n      try {\n        decryptedData = JSON.parse(decryptedData);\n      } catch (e) {}\n    }\n    return decryptedData;\n  }\n\n  remove(key) {\n    return this.storage.removeItem(key);\n  }\n}","import * as localforage from 'localforage';\nimport {EncryptStorage} from './encrypted-storage';\nimport {resetKeyPairs} from '../../hooks/use-key-pairs';\nlet encryptStorage;\nwindow.localforage = localforage;\n\nexport function getItemFromStorage(keyName) {\n  if (!encryptStorage) return null;\n  return encryptStorage.decrypt(keyName);\n}\n\nexport function deleteItemInStorage(keyName) {\n  if (!encryptStorage) throw new Error('Pin not set');\n\n  return encryptStorage.storage.removeItem(keyName);\n}\n\nexport function setItemInStorage(keyName, value) {\n  if (!encryptStorage) throw new Error('Pin not set');\n  return encryptStorage.encrypt(keyName, value);\n}\n\nexport function setStoragePin(pin) {\n  encryptStorage = new EncryptStorage(pin, localforage);\n}\n\nexport async function exportStorage() {\n  const result = {};\n  await encryptStorage.storage.iterate((value, key) => {\n    result[key] = value;\n  });\n\n  return result;\n}\n\nexport function disableStorage() {\n  encryptStorage = null;\n  resetKeyPairs();\n}","import {createState, useState} from '@hookstate/core';\n\nconst store = createState({\n  privateKey: null,\n  publicKey: null,\n});\n\nexport function useKeyPairs() {\n  const state = useState(store);\n\n  return {\n    privateKey: state.privateKey.get(),\n    publicKey: state.publicKey.get(),\n    setKeyPair({publicKey, privateKey}) {\n      store.merge({\n        privateKey, publicKey,\n      });\n    },\n  };\n}\n\nexport function resetKeyPairs() {\n  store.merge({\n    privateKey: null,\n    publicKey: null,\n  });\n}","export default function FaqQuestion({title, children}) {\n  return (\n    <div className=\"p-2 bg-gray-300 rounded my-2\">\n      <div className=\"italic font-bold\">{title}</div>\n      <div className=\"pt-2\">\n        {children}\n      </div>\n    </div>\n  );\n}","import FaqQuestion from './faq-question';\n\nexport default function EnigmaAbout() {\n  return (\n    <>\n      <div className=\"w-full md:w-1/2\">\n        <div className=\"font-bold text-3xl\">\n          Engima Reloaded\n        </div>\n\n        <div className=\"mt-12\">\n          <div className=\"font-bold mb-2\">\n            Features\n          </div>\n\n          <div className=\"pl-4\">\n            <ul className=\"list-disc\">\n              <li>\n                DIY Encrypt and decrypt messages and files\n              </li>\n              <li>\n                <a href=\"https://github.com/enigma-reloaded/enigma-reloaded/blob/master/LICENSE\" target=\"_blank\" className=\"underline\">\n                  Open source license(GPL V3)\n                </a> and <a href=\"https://github.com/enigma-reloaded/enigma-reloaded\" target=\"_blank\" className=\"underline\">open source code</a>\n              </li>\n              <li className=\"mt-2\">\n                Local data such as contacts and messages are encrypted using <b>AES-256</b>, and your PIN is used as the passphrase\n              </li>\n              <li className=\"my-2\">\n                Messages and files are encrypted using <b>Public-key authenticated encryption (box)</b> from <a className=\"underline\" href=\"https://github.com/dchest/tweetnacl-js\" target=\"_blank\">\n                https://github.com/dchest/tweetnacl-js\n                </a>. Which is implements <b>x25519-xsalsa20-poly1305</b>\n              </li>\n              <li>\n                No ads, tracking, remote server\n              </li>\n              <li>\n                Offline support\n              </li>\n              <li>\n                Compatible with services such as: <b>Messenger, Signal, Slack, Whatsapp, Twitter, Instagram DM, SMS etc</b>.\n                You can even print the cypher on a paper\n              </li>\n              <li>\n                Import export <b>encrypted backups</b>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"mt-12\">\n        <div className=\"font-bold mb-2\">\n          FAQ\n        </div>\n\n        <FaqQuestion title=\"What is enigma?\">\n          Enigma is a simple DIY(Do it yourself) program that runs inside your browser that helps you:\n          <div className=\"pl-4\">\n            <ul className=\"list-disc\">\n              <li>\n                Encrypt and decrypt messages\n              </li>\n              <li>\n                Encrypt and decrypt files\n              </li>\n              <li>\n                Store contacts and conversations\n              </li>\n            </ul>\n          </div>\n        </FaqQuestion>\n\n        <FaqQuestion title=\"Why is called enigma?\">\n          <div>\n            It's a common name, that is already associated with secrecy, and your life should be private. Enigma reloaded single purpose is to help people <a className=\"underline\"\n              href=\"https://www.youtube.com/watch?v=0hLjuVyIIrs\" target=\"_blank\">against the current Big Tech Surveillance</a>\n          </div>\n        </FaqQuestion>\n\n        <FaqQuestion title=\"Does it have anything to do with the nazi?\">\n          No\n        </FaqQuestion>\n\n        <FaqQuestion title=\"Can big tech claims about end to end encryption be trusted?\">\n          No\n        </FaqQuestion>\n\n        <FaqQuestion title=\"Is it military grade secure?\">\n          <div className=\"pl-4\">\n            <ul className=\"list-disc\">\n              <li>\n                ✓ Strong encryption\n              </li>\n              <li>\n                ✓ Access control\n              </li>\n              <li>\n                ✓ Encrypted backups\n              </li>\n              <li>\n                ✓ No external services(except the optional gravatar for user avatars)\n              </li>\n            </ul>\n          </div>\n        </FaqQuestion>\n\n        <FaqQuestion title=\"Why did you build this?\">\n          As a person who knows the truth and has the skills, I felt morally obligated.\n        </FaqQuestion>\n\n        <FaqQuestion title=\"Is it 'really' for free?\">\n          <div>\n            <div>\n              100% free, no ads, no tracking. If Enigma Reloaded helped you, that's enough for me. But if you want, you can donate me some Monero\n            </div>\n            <div>\n              <b>1234</b>\n            </div>\n          </div>\n        </FaqQuestion>\n      </div>\n    </>\n  );\n}","export default __webpack_public_path__ + \"static/media/enigma-logo.d8f45653.jpg\";","import EnigmaAbout from './home-description/about';\nimport logo from '../../../assets/enigma-logo.jpg';\n\nexport default function HomePageDescription({children: button}) {\n  return (\n    <div>\n      <div className=\"flex justify-center\">\n        <img src={logo} alt=\"enigma\"/>\n      </div>\n      <div className=\"py-2\">\n        {button}\n      </div>\n\n      <EnigmaAbout/>\n    </div>\n  );\n}","import {useEffect, useRef} from 'react';\nimport useOnClickOutside from 'use-onclickoutside';\n\nexport default function Modal({isOpened, close, children}) {\n  useEffect(() => {\n    if (isOpened) {\n      return document.body.classList.add('overflow-y-hidden');\n    } else {\n      return document.body.classList.remove('overflow-y-hidden');\n    }\n  }, [isOpened]);\n  const modalContentRef = useRef(null);\n  useOnClickOutside(modalContentRef, close);\n\n  if (!isOpened) return null;\n\n  return (\n    <>\n      <div className=\"absolute inset-0 bg-gray-500 opacity-70\"/>\n\n      <div className=\"absolute inset-0 items-center py-20 overflow-y-auto px-2 md:px-0\">\n        <div className=\"mb-20 bg-white md:w-1/3 w-full p-4 rounded shadow mx-auto\" ref={modalContentRef}>\n          {children}\n        </div>\n      </div>\n    </>\n  );\n}","import {generateKeys} from '../../lib/utils/encryption/generate-keys';\nimport {isEmpty} from 'lodash';\nimport {passwordStrength} from 'check-password-strength';\nimport {setItemInStorage, setStoragePin} from '../../lib/utils/encryption/storage';\nimport {useLocalForage} from '../../lib/hooks/use-local-forage';\nimport {useState} from '@hookstate/core';\nimport HomePageDescription from '../pages/home/home-page-description';\nimport Modal from '../utils/modal';\n\nexport default function SetupGeneratePrivateKey() {\n  const [_, setIsPrivateKeyInitialized] = useLocalForage('pk-initialized'); // eslint-disable-line no-unused-vars\n\n  const state = useState({\n    confirmMatch: true,\n    confirmPinValue: '',\n    emailValue: '',\n    nameValue: '',\n    passwordStrength: 'Too weak',\n    pinValue: '',\n    setupPinModal: false,\n  });\n  function openSetupPinModal(e) {\n    e.preventDefault();\n    state.merge({setupPinModal: true});\n  }\n\n  function closeSetupPinModal(e) {\n    e.preventDefault();\n    state.merge({setupPinModal: false});\n  }\n\n  function changePinValue(e) {\n    const value = e.target.value;\n    const strength = passwordStrength(value).value;\n    state.merge({\n      passwordStrength: strength,\n      pinValue: e.target.value,\n    });\n  }\n\n  function changeConfirmPinValue(e) {\n    const value = e.target.value;\n\n    state.merge((s) => {\n      return {\n        confirmMatch: value === s.pinValue,\n        confirmPinValue: value,\n      };\n    });\n  }\n\n  function generatePrivateKey(e) {\n    e.preventDefault();\n    const keyPair = generateKeys();\n    setStoragePin(state.pinValue.get());\n    setItemInStorage('key-pair', {\n      publicKey: Array.from(keyPair.publicKey),\n      secretKey: Array.from(keyPair.secretKey),\n    });\n    setItemInStorage('name', state.nameValue.get());\n    setItemInStorage('email', state.emailValue.get().toLowerCase().replace(/\\s/g, ''));\n    setIsPrivateKeyInitialized(true);\n  }\n\n  const submitDisabled = isEmpty(state.pinValue.get()) || state.passwordStrength.get() === 'Too weak' ||\n    isEmpty(state.confirmPinValue.get()) || !state.confirmMatch.get();\n\n  function changeNameValue(e) {\n    state.merge({nameValue: e.target.value});\n  }\n\n  function changeEmailValue(e) {\n    state.merge({emailValue: e.target.value});\n  }\n\n  return (\n    <div>\n      <HomePageDescription>\n        <div className=\"flex justify-center\">\n          <button onClick={openSetupPinModal} className=\"bg-black text-white text-4xl rounded p-2\">\n            Get started\n          </button>\n        </div>\n      </HomePageDescription>\n\n      <Modal isOpened={state.setupPinModal.get()} close={closeSetupPinModal}>\n        <form className=\"pure-form pure-form-aligned\" onSubmit={generatePrivateKey}>\n          <fieldset>\n            <legend>PIN setup</legend>\n\n            <div className=\"pure-control-group\">\n              <input name=\"name\" value={state.nameValue.get()} onChange={changeNameValue} placeholder=\"Enter your name\" className=\"w-full\"/>\n              <span className=\"pure-form-message\">Optional</span>\n            </div>\n\n            <div className=\"pure-control-group\">\n              <input type=\"email\" name=\"email\" value={state.emailValue.get()} onChange={changeEmailValue} placeholder=\"Your email to have a avatar from gravatar.com\" className=\"w-full\"/>\n              <span className=\"pure-form-message\">Optional</span>\n            </div>\n\n            <div className=\"pure-control-group\">\n              <input name=\"pin\" value={state.pinValue.get()} onChange={changePinValue} placeholder=\"Enter new PIN\" className=\"w-full\" required/>\n              {\n                state.pinValue.get().length > 0 &&\n                 <span className=\"pure-form-message\">{state.passwordStrength.get()}</span>\n              }\n              <span className=\"pure-form-message\">You can't recover or change the PIN later. <span className=\"underline\">Make sure you remember it and keep it secret</span></span>\n            </div>\n\n            <div className=\"pure-control-group\">\n              <input name=\"pinConfirm\" value={state.confirmPinValue.get()} onChange={changeConfirmPinValue}\n                placeholder=\"Confirm your PIN\"\n                className=\"w-full\"\n                required/>\n              {\n                !state.confirmMatch.get() &&\n                  <span className=\"pure-form-message text-red-500\">Pins don't match</span>\n              }\n            </div>\n\n            <button type=\"submit\" className=\"pure-button pure-button-primary w-full\" disabled={submitDisabled}>\n              Submit\n            </button>\n          </fieldset>\n        </form>\n      </Modal>\n    </div>\n  );\n}","import {box} from 'tweetnacl';\n\nexport function generateKeys() {\n  return box.keyPair();\n}","import {useEffect} from 'react';\nimport {useHistory, useLocation} from 'react-router-dom';\nimport {useLocalForage} from '../../lib/hooks/use-local-forage';\nimport SetupGeneratePrivateKey from '../setup/generate-private-key';\n\nexport function AppSetup({children}) {\n  const location = useLocation();\n  const history = useHistory();\n  const [isPrivateKeyInitialized] = useLocalForage('pk-initialized');\n  const initialized = isPrivateKeyInitialized !== null;\n  const notReady = isPrivateKeyInitialized === 'NOT_READY';\n\n  useEffect(() => {\n    if (notReady) return;\n    if (!initialized && location.pathname !== '/') {\n      history.push('/');\n    }\n  }, [location, history, notReady, initialized]);\n\n  if (notReady) return null;\n  if (initialized) return children;\n\n  return (\n    <SetupGeneratePrivateKey/>\n  );\n}","import {Link, useHistory} from 'react-router-dom';\nimport {disableStorage} from '../../lib/utils/encryption/storage';\nimport logo from '../../assets/enigma-logo.jpg';\n\nexport default function PageNavigation() {\n  const history = useHistory();\n\n  function lock(e) {\n    e.preventDefault();\n    history.push(`/unlock`);\n    setTimeout(disableStorage, 50);\n  }\n\n  return (\n    <div className=\"my-2\">\n      <div className=\"flex justify-center\">\n        <img src={logo} alt=\"enigma\"/>\n      </div>\n      <div className=\"flex flex-wrap justify-center pt-2\">\n        <NavigationItem text=\"Home\" to=\"/\"/>\n        <NavigationItem text=\"Contacts\" to=\"/contacts\"/>\n        <div className=\"pl-3\">\n          <button className=\"mx-1 text-center bg-black p-2 rounded text-white\" onClick={lock}>\n            Lock\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction NavigationItem({text, to}) {\n  return (\n    <Link to={to}>\n      <button className=\"mx-1 text-center bg-black p-2 rounded text-white\">\n        {text}\n      </button>\n    </Link>\n  );\n}","import {AppSetup} from './app-setup';\nimport {Route} from 'react-router-dom';\nimport {useRequireUnlock} from '../../lib/hooks/use-require-unlock';\nimport PageNavigation from './navigation';\n\nexport default function Unlocked({children}) {\n  const isUnlocked = useRequireUnlock();\n\n  return (\n    <div>\n      <div>\n        <PageNavigation/>\n      </div>\n      <div className=\"min-h-screen flex flex-col justify-between\">\n        {\n          isUnlocked && <div>\n            {children}\n          </div>\n        }\n\n        <div className=\"text-center pt-4\">\n          Don't be evil\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function UnlockedRoute({children, ...opts}) {\n  return (\n    <Route {...opts}>\n      <AppSetup>\n        <Unlocked>\n          {children}\n        </Unlocked>\n      </AppSetup>\n    </Route>\n  );\n}","import {disableStorage} from '../utils/encryption/storage';\nimport {useEffect, useState} from 'react';\nimport {useHistory, useLocation} from 'react-router-dom';\nimport {useIdle} from 'react-use';\nimport {useKeyPairs} from './use-key-pairs';\n\nexport function useRequireUnlock() {\n  const history = useHistory();\n  const location = useLocation();\n  const {publicKey} = useKeyPairs();\n  const [state, setState] = useState(false);\n  const isIdle = useIdle(120e3);\n\n  useEffect(() => {\n    if (!publicKey) {\n      return history.push(`/unlock?redirectTo=${location.pathname}`);\n    }\n    setState(true);\n  }, [publicKey, setState, history, location]);\n\n  useEffect(() => {\n    if (!publicKey) return;\n    if (!isIdle) return;\n    history.push(`/unlock?redirectTo=${location.pathname}`);\n    setTimeout(disableStorage, 50);\n  }, [isIdle, publicKey, history, location.pathname]);\n\n  return state;\n}","import {Helmet, HelmetProvider} from 'react-helmet-async';\nconst pageTitle = document.title;\n\nexport function buildPageTitle(input) {\n  if (!input) return pageTitle;\n\n  return `${input} ${pageTitle}`;\n}\n\nexport default function PageTitle({children}) {\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>{pageTitle}</title>\n      </Helmet>\n      {children}\n    </HelmetProvider>\n  );\n}","import {Helmet} from 'react-helmet-async';\nimport {buildPageTitle} from '../page/page-title';\nimport EnigmaAbout from './home/home-description/about';\n\nexport default function AboutPage() {\n  return (\n    <>\n      <Helmet>\n        <title>{buildPageTitle('About')}</title>\n      </Helmet>\n      <EnigmaAbout/>\n    </>\n  );\n}","export default function AppLayout({children}) {\n  return (\n    <div className=\"p-4\">\n      {children}\n    </div>\n  );\n}","export function downloadFile(blob, fileName) {\n  const url = window.URL.createObjectURL(blob);\n\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = fileName;\n  a.classList.add('hidden');\n  document.body.appendChild(a);\n  a.click();\n  a.remove();\n\n  setTimeout(() => {\n    window.URL.revokeObjectURL(blob);\n  }, 1000);\n}","import {getItemFromStorage, setItemInStorage} from '../utils/encryption/storage';\nimport {useEffect, useState} from 'react';\n\nexport function useEncryptedStorage(keyName) {\n  const [state, setState] = useState();\n  useEffect(() => {\n    getItemFromStorage(keyName).then((value) => {\n      setState(value);\n    });\n  }, [setState, keyName]);\n\n  const setStateWrapper = (value) => {\n    setState(value);\n    setItemInStorage(keyName, value);\n  };\n\n  return [state, setStateWrapper];\n}\n\nexport function useMultipleEncryptedStorage(...keyNames) {\n  const [state, setState] = useState({});\n\n  useEffect(() => {\n    const promises = keyNames.map(async (keyName) => {\n      return {\n        keyName,\n        value: await getItemFromStorage(keyName),\n      };\n    });\n\n    Promise.all(promises).then((values) => {\n      const result = {};\n\n      values.forEach((v) => {\n        result[v.keyName] = v.value;\n      });\n\n      setState(result);\n    });\n  }, [setState, keyNames]);\n\n  return state;\n}","import {downloadFile} from '../../lib/utils/files/download-file';\nimport {exportStorage} from '../../lib/utils/encryption/storage';\nimport {useEncryptedStorage} from '../../lib/hooks/use-encrypted-storage';\nimport {useState} from '@hookstate/core';\nimport FaqQuestion from './home/home-description/faq-question';\n\nexport default function BackupPage() {\n  const [name] = useEncryptedStorage('name');\n  const state = useState({\n    buttonDisabled: false,\n  });\n\n  async function downloadBackup(e) {\n    e.preventDefault();\n    state.merge({buttonDisabled: true});\n\n    const result = await exportStorage();\n    const blob = new Blob([JSON.stringify(result)]);\n    const fileName = `${name}-enigma-backup.json`;\n\n    downloadFile(blob, fileName);\n    state.merge({buttonDisabled: false});\n  }\n\n  return (\n    <div className=\"mx-auto md:w-1/3 w-full\">\n      <div className=\"py-4\">\n        <button className=\"pure-button pure-button-primary bg-black w-full\" onClick={downloadBackup} disabled={state.buttonDisabled.get()}>\n          Download backup\n        </button>\n      </div>\n\n      <div>\n        <div className=\"font-bold\">\n          FAQ about backups\n        </div>\n\n        <FaqQuestion title=\"Can somebody restore my data with just the backup file?\">\n          No, he needs the PIN\n        </FaqQuestion>\n\n        <FaqQuestion title=\"What to do if someone got access to the program while it was PIN unlocked?\">\n          Probably your <a href=\"https://en.wikipedia.org/wiki/Public-key_cryptography\" target=\"_blank\" className=\"underline\">Private Key</a> is compromised, you should start fresh and not from a backup.\n        </FaqQuestion>\n      </div>\n    </div>\n  );\n}","export function copyToClipboard(text) {\n  const input = document.createElement('input');\n  input.setAttribute('value', text);\n  document.body.appendChild(input);\n  input.select();\n  const result = document.execCommand('copy');\n  document.body.removeChild(input);\n  return result;\n}","import {toast} from 'react-toastify';\n\nexport function feedBackSuccess(message) {\n  toast.success(message);\n}","import {randomNumber} from '../numbers/random-number';\n\nexport function undetectableSplitString(str) {\n  let output = '';\n  const strLng = str.length;\n  let nextWordSize;\n\n  for (let i = 0; i < strLng; i++) {\n    if (!nextWordSize) {\n      nextWordSize = randomNumber(1, 10);\n    }\n\n    output += str[i];\n    nextWordSize -= 1;\n\n    if (!nextWordSize) {\n      output += ' ';\n    }\n  }\n\n  return output;\n}","export function randomNumber(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}","import {copyToClipboard} from '../utils/actions/copy-to-clipboard';\nimport {feedBackSuccess} from '../feedback/success';\nimport {getItemFromStorage, setItemInStorage} from '../utils/encryption/storage';\nimport {isEmpty} from 'lodash';\nimport {none} from '@hookstate/core';\nimport {undetectableSplitString} from '../utils/undetectable/split-string';\nimport {v4 as uuidv4} from 'uuid';\n\nexport class PrivateMessageRecord {\n  constructor({id, messageRaw, encryptedMessage, contact, createdAt, mine}) {\n    this.id = id;\n    this.messageRaw = messageRaw;\n    this.encryptedMessage = encryptedMessage;\n    this.contact = contact;\n    this.createdAt = createdAt;\n    this.mine = mine;\n  }\n\n  copyToClipBoard() {\n    copyToClipboard(undetectableSplitString(this.encryptedMessage));\n    feedBackSuccess('Encrypted message copied to clipboard');\n  }\n\n  async save() {\n    this.contact.messages.set((m) => {\n      m.splice(0, 0, this);\n      return m;\n    });\n    const key = `private-messages-${this.contact.id.get()}`;\n\n    let rawMessages = await getItemFromStorage(key);\n    if (isEmpty(rawMessages)) rawMessages = [];\n\n    rawMessages.splice(0, 0, this.serialize());\n\n    setItemInStorage(key, rawMessages);\n  }\n\n  serialize() {\n    return {\n      createdAt: this.createdAt,\n      encryptedMessage: this.encryptedMessage.substring(0, 8),\n      id: this.id,\n      messageRaw: this.messageRaw,\n      mine: this.mine,\n    };\n  }\n\n  async destroy(contact) {\n    const contactIndex = contact.messages.findIndex((message) => {\n      return message.id.get() === this.id;\n    });\n\n    const key = `private-messages-${contact.id.get()}`;\n\n    let rawMessages = await getItemFromStorage(key);\n    rawMessages = rawMessages.filter((message) => {\n      return message.id !== this.id;\n    });\n\n    contact.messages.merge({\n      [contactIndex]: none,\n    });\n\n    setItemInStorage(key, rawMessages);\n  }\n}\n\nexport async function createNewPrivateMessageRecord(messageRaw, encryptedMessage, contact) {\n  const createdAt = new Date().toISOString();\n  const id = uuidv4();\n  const mine = true;\n  const record = new PrivateMessageRecord({\n    contact, createdAt, encryptedMessage,\n    id, messageRaw, mine,\n  });\n\n  await record.save();\n\n  return record;\n}\n\nexport async function insertDecryptedMessageRecord(messageRaw, encryptedMessage, contact) {\n  const createdAt = new Date().toISOString();\n  const id = uuidv4();\n  const mine = false;\n  const record = new PrivateMessageRecord({\n    contact, createdAt, encryptedMessage,\n    id, messageRaw, mine,\n  });\n\n  await record.save();\n\n  return record;\n}\n\nexport async function destroyMessageRecord(messageRecord) {\n  return messageRecord.destroy();\n}","import {PrivateMessageRecord} from './private-message-record';\nimport {getItemFromStorage} from '../utils/encryption/storage';\nimport {isEmpty} from 'lodash';\n\nexport async function loadPrivateMessagesForContact(contact) {\n  const key = `private-messages-${contact.id}`;\n\n  const rawMessages = await getItemFromStorage(key);\n\n  if (isEmpty(rawMessages)) return [];\n\n  return rawMessages.map((m) => {\n    const message = new PrivateMessageRecord(m);\n    message.contact = contact;\n    return message;\n  });\n}","import {loadPrivateMessagesForContact} from '../private-messages/private-messages-store';\nimport {removeContact, saveContact} from './contacts-store';\n\nexport class RecordContact {\n  constructor({id, name, emailHash, publicKey}) {\n    this.id = id;\n    this.name = name;\n    this.emailHash = emailHash;\n    this.publicKey = publicKey;\n    this.messages = [];\n  }\n\n  save() {\n    return saveContact(this);\n  }\n\n  destroy() {\n    return removeContact(this);\n  }\n\n  serialize() {\n    return {\n      emailHash: this.emailHash, id: this.id,\n      name: this.name, publicKey: this.publicKey,\n    };\n  }\n\n  serializeWithoutId() {\n    const result = this.serialize();\n    delete result.id;\n    return result;\n  }\n\n  async loadPrivateMessages(hookstate) {\n    hookstate.messages.set(await loadPrivateMessagesForContact(this));\n  }\n}","import {RecordContact} from './record-contact';\nimport {createState} from '@hookstate/core';\nimport {deleteItemInStorage, getItemFromStorage, setItemInStorage} from '../utils/encryption/storage';\nimport {isEmpty, sortBy} from 'lodash';\nimport {none} from '@hookstate/core';\n\nlet loadedFromStorage;\n\nexport const contactsStore = createState({\n  contacts: [],\n});\n\nexport function saveContact(contactRecord) {\n  getItemFromStorage('contacts').then((contacts) => {\n    if (isEmpty(contacts)) contacts = [];\n\n    const existingContact = contacts.find((c) => {\n      return c.publicKey === contactRecord.publicKey;\n    });\n    if (existingContact) {\n      Object.assign(existingContact, contactRecord.serializeWithoutId());\n      const storeContact = contactsStore.contacts.find((contact) => {\n        return contact.publicKey.get() === contactRecord.publicKey;\n      });\n\n      storeContact.merge(contactRecord.serializeWithoutId());\n    } else {\n      contactsStore.contacts.set((c) => {\n        c.splice(0, 0, contactRecord);\n        return c;\n      });\n      contacts.splice(0, 0, contactRecord.serialize());\n    }\n\n    setItemInStorage('contacts', contacts);\n  });\n}\n\nexport async function removeContact(contactRecord) {\n  let contacts = await getItemFromStorage('contacts');\n  const {id} = contactRecord;\n  if (isEmpty(contacts)) return;\n  contacts = contacts.filter((contact) => {\n    return contact.publicKey !== contactRecord.publicKey;\n  });\n\n  const contactIndex = contactsStore.contacts.findIndex((contact) => {\n    return contact.publicKey.get() === contactRecord.publicKey;\n  });\n\n  if (contactIndex !== undefined) contactsStore.contacts[contactIndex].set(none);\n\n  await setItemInStorage('contacts', contacts);\n  await deleteItemInStorage(`private-messages-${id}`);\n}\n\nexport async function getContactsStore() {\n  if (loadedFromStorage) {\n    return contactsStore;\n  }\n\n  loadedFromStorage = true;\n  let contacts = await getItemFromStorage('contacts');\n  if (isEmpty(contacts)) return contactsStore;\n\n  contacts = contacts.map((c) => {\n    return new RecordContact(c);\n  });\n\n  const sortedContacts = sortBy(contacts, 'name');\n\n  contactsStore.merge({contacts: sortedContacts});\n\n  return contactsStore;\n}\n\nexport async function getContact(id) {\n  const contactStore = await getContactsStore();\n\n  const record = contactStore.contacts.find((contact) => {\n    return contact.id.get() === id;\n  });\n\n  if (!record.get()) return {};\n\n  return new RecordContact(JSON.parse(JSON.stringify(record.get())));\n}","export default __webpack_public_path__ + \"static/media/user-placeholder.1bd594c3.svg\";","import {isEmpty} from 'lodash';\nimport {useLocalForage} from '../../lib/hooks/use-local-forage';\nimport userPlaceholder from '../../assets/user-placeholder.svg';\n\nexport default function ContactAvatar({emailHash, contact, height, width}) {\n  const [gravatarEnabled] = useLocalForage('gravatar-enabled');\n  if (gravatarEnabled === 'NOT_READY') return null;\n\n  const displayedEmailHash = emailHash || contact.emailHash.get();\n  let src;\n  if (isEmpty(displayedEmailHash) || !gravatarEnabled) {\n    src = userPlaceholder;\n  } else {\n    src = `http://www.gravatar.com/avatar/${displayedEmailHash}`;\n  }\n\n  return (\n    <img src={src} className={`rounded-full ${height} ${width}`}/>\n  );\n}","import {feedBackSuccess} from '../../../lib/feedback/success';\nimport {useState} from '@hookstate/core';\nimport Modal from '../../utils/modal';\n\nexport default function EditContact({contact}) {\n  const state = useState({\n    modalIsOpened: false,\n  });\n  function closeModal() {\n    state.merge({modalIsOpened: false});\n  }\n\n  function openModal(e) {\n    e.preventDefault();\n    state.merge({modalIsOpened: true});\n  }\n\n  function save(e) {\n    e.preventDefault();\n    closeModal();\n    contact.get().save();\n    feedBackSuccess('Contact saved');\n  }\n\n  function changeNameValue(e) {\n    contact.merge({name: e.target.value});\n  }\n\n  return (\n    <>\n      <button className=\"underline\" onClick={openModal}>\n        Edit\n      </button>\n\n      <Modal isOpened={state.modalIsOpened.get()} close={closeModal}>\n        <form className=\"pure-form pure-form-aligned\" onSubmit={save}>\n          <fieldset>\n            <legend>Edit {contact.name.get()}</legend>\n          </fieldset>\n\n          <div className=\"pure-control-group\">\n            <input name=\"name\" value={contact.name.get()} onChange={changeNameValue} placeholder=\"Name\" className=\"w-full\" required/>\n          </div>\n\n          <button type=\"submit\" className=\"pure-button pure-button-primary w-full bg-black\">\n            Save\n          </button>\n        </form>\n      </Modal>\n    </>\n  );\n}","import {getItemFromStorage} from './storage';\nimport {isEmpty} from 'lodash';\n\nlet privateKey;\nlet publicKey;\n\nexport async function getPrivateKey() {\n  if (!isEmpty(privateKey)) return privateKey;\n  const pk = await getItemFromStorage('key-pair');\n  if (isEmpty(pk)) return;\n  return privateKey = Uint8Array.from(pk.secretKey);\n}\n\nexport async function getPublicKey() {\n  if (!isEmpty(publicKey)) return publicKey;\n  const pk = await getItemFromStorage('key-pair');\n  if (isEmpty(pk)) return;\n  return publicKey = Uint8Array.from(pk.publicKey);\n}","import {\n  encodeBase64,\n} from 'tweetnacl-util';\nimport {isEmpty} from 'lodash';\n\nexport function formatToBase64Undetectable(string) {\n  if (isEmpty(string)) return;\n\n  const output = encodeBase64(string);\n\n  return output.replace(/=/g, '');\n}","import {box, randomBytes} from 'tweetnacl';\nimport {decodeBase64, decodeUTF8} from 'tweetnacl-util';\nimport {formatToBase64Undetectable} from '../undetectable/format-to-base-64-undetectable';\nimport {getPrivateKey} from './keys';\nimport {sample} from 'lodash';\n\nexport async function encryptMessage(publicKeyString, messageString) {\n  const pubKeyUInt8Array = decodeBase64(publicKeyString);\n  const msgUInt8Array = decodeUTF8(messageString);\n  const nonce = randomBytes(box.nonceLength);\n\n  const encryptedMessage = box(\n      msgUInt8Array,\n      nonce,\n      pubKeyUInt8Array,\n      await getPrivateKey(),\n  );\n  return formatToBase64Undetectable(encryptedMessage) + formatNonce(nonce);\n}\n\nfunction formatNonce(nonce) {\n  const char = sample(['?', '!', '.', ',']);\n\n  return char + formatToBase64Undetectable(nonce);\n}","import {Editor, EditorState, convertToRaw} from 'draft-js';\nimport {createNewPrivateMessageRecord} from '../../../lib/private-messages/private-message-record';\nimport {encryptMessage} from '../../../lib/utils/encryption/encrypt-message';\nimport {useState as reactUseState, useEffect, useRef} from 'react';\nimport {useState} from '@hookstate/core';\nimport Modal from '../../utils/modal';\n\nexport default function CreateNewPrivateMessage({contact}) {\n  const editorRef = useRef();\n  const state = useState({\n    modalIsOpened: false,\n  });\n\n  useEffect(() => {\n    if (!state.modalIsOpened.get()) return;\n    editorRef.current.focus();\n  }, [state.modalIsOpened.get()]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const [editorState, setEditorState] = reactUseState(\n      () => EditorState.createEmpty(),\n  );\n\n  function openModal(e) {\n    e.preventDefault();\n    state.merge({modalIsOpened: true});\n  }\n\n  function closeModal() {\n    state.merge({modalIsOpened: false});\n  }\n\n  async function save(e) {\n    e.preventDefault();\n    let rawContent = convertToRaw(editorState.getCurrentContent());\n    rawContent = rawContent.blocks.map((block) => (!block.text.trim() && '\\n') || block.text).join('\\n');\n    const encryptedMessage = await encryptMessage(contact.publicKey.get(), rawContent);\n    const record = await createNewPrivateMessageRecord(rawContent, encryptedMessage, contact);\n\n    state.merge({modalIsOpened: false});\n    setEditorState(EditorState.createEmpty());\n\n    record.copyToClipBoard();\n  }\n\n  return (\n    <>\n      <button className=\"pure-button pure-button-primary bg-black w-full\" onClick={openModal}>\n        Encrypt message\n      </button>\n\n      <Modal isOpened={state.modalIsOpened.get()} close={closeModal}>\n        <form onSubmit={save}>\n          <div className=\"border-gray-300 border border-solid p-2\">\n            <Editor editorState={editorState} onChange={setEditorState} placeholder=\"Type your message\" ref={editorRef}/>\n          </div>\n\n          <div className=\"flex justify-end my-2\">\n            <button type=\"submit\" className=\"pure-button pure-button-primary bg-black\" disabled={!editorState.getCurrentContent().hasText()}>\n              Encrypt message\n            </button>\n          </div>\n        </form>\n      </Modal>\n    </>\n  );\n}","import {decodeBase64} from 'tweetnacl-util';\n\nexport function decodeBase64Undetectable(base64String) {\n  return decodeBase64(restoreBase64String(base64String));\n}\n\nexport function restoreBase64String(base64StringUndetectable) {\n  if (base64StringUndetectable.length % 4 !== 0) {\n    base64StringUndetectable += ('===').slice(0, 4 - (base64StringUndetectable.length % 4));\n  }\n\n  return base64StringUndetectable;\n}","import {box} from 'tweetnacl';\nimport {decodeBase64, encodeUTF8} from 'tweetnacl-util';\nimport {decodeBase64Undetectable} from '../undetectable/decode-base-64-undetectable';\nimport {getPrivateKey} from './keys';\nimport {isEmpty} from 'lodash';\n\nexport async function decryptMessage(publicKeyString, encryptedString) {\n  const [encryptedMessageString, nonceString] = encryptedString.split(/\\?|!|\\.|,/);\n  if (isEmpty(encryptedMessageString) || isEmpty(nonceString)) throw new Error('Invalid encrypted message');\n  const pubKeyUInt8Array = decodeBase64(publicKeyString);\n  const nonce = decodeBase64Undetectable(nonceString);\n  const encryptedMessage = decodeBase64Undetectable(encryptedMessageString);\n  const decryptedMessage = box.open(encryptedMessage, nonce, pubKeyUInt8Array, await getPrivateKey());\n  return encodeUTF8(decryptedMessage);\n}","import {Editor, EditorState, convertToRaw} from 'draft-js';\nimport {decryptMessage} from '../../../lib/utils/encryption/decrypt-message';\nimport {feedBackSuccess} from '../../../lib/feedback/success';\nimport {feedbackError} from '../../../lib/feedback/error';\nimport {\n  insertDecryptedMessageRecord,\n} from '../../../lib/private-messages/private-message-record';\nimport {useState as reactUseState, useEffect, useRef} from 'react';\nimport {useState} from '@hookstate/core';\nimport Modal from '../../utils/modal';\n\nexport default function DecodeNewPrivateMessage({contact}) {\n  const editorRef = useRef();\n  const state = useState({\n    modalIsOpened: false,\n  });\n\n  useEffect(() => {\n    if (!state.modalIsOpened.get()) return;\n    editorRef.current.focus();\n  }, [state.modalIsOpened.get()]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const [editorState, setEditorState] = reactUseState(\n      () => EditorState.createEmpty(),\n  );\n\n  function openModal(e) {\n    e.preventDefault();\n    state.merge({modalIsOpened: true});\n  }\n\n  function closeModal() {\n    state.merge({modalIsOpened: false});\n  }\n\n  async function decrypt(e) {\n    e.preventDefault();\n    let encryptedContentRaw = convertToRaw(editorState.getCurrentContent());\n    encryptedContentRaw = encryptedContentRaw.blocks.map((block) => (!block.text.trim() && '\\n') || block.text)\n        .join('').replace(/\\s/g, '');\n    let messageRaw;\n    try {\n      messageRaw = await decryptMessage(contact.publicKey.get(), encryptedContentRaw);\n    } catch {\n      return feedbackError('Invalid encrypted message');\n    }\n    await insertDecryptedMessageRecord(messageRaw, encryptedContentRaw, contact);\n    state.merge({modalIsOpened: false});\n    setEditorState(EditorState.createEmpty());\n\n    feedBackSuccess('Message decrypted!');\n  }\n\n  return (\n    <>\n      <button className=\"pure-button pure-button-primary bg-black w-full\" onClick={openModal}>\n        Decrypt message\n      </button>\n\n      <Modal isOpened={state.modalIsOpened.get()} close={closeModal}>\n        <form onSubmit={decrypt}>\n          <div className=\"border-gray-300 border border-solid p-2\">\n            <Editor editorState={editorState} onChange={setEditorState} placeholder=\"Paste the encrypted message\" ref={editorRef}/>\n          </div>\n\n          <div className=\"flex justify-end my-2\">\n            <button type=\"submit\" className=\"pure-button pure-button-primary pure-button-primary bg-black\" disabled={!editorState.getCurrentContent().hasText()}>\n              Decrypt message\n            </button>\n          </div>\n        </form>\n      </Modal>\n    </>\n  );\n}","import {box} from 'tweetnacl';\nimport {decodeBase64} from 'tweetnacl-util';\nimport {decodeBase64Undetectable} from '../undetectable/decode-base-64-undetectable';\nimport {getPrivateKey} from './keys';\nimport {isEmpty} from 'lodash';\nimport {v4 as uuidv4} from 'uuid';\n\nexport async function decryptFile(publicKeyString, encryptedFile) {\n  const match = encryptedFile.name.match(/-(.*)\\.txt$/);\n  if (isEmpty(match)) throw new Error('Invalid encrypted file');\n  const [fullExtension, extension] = match;\n\n  const nonce = decodeBase64Undetectable(encryptedFile.name.replace(fullExtension, ''));\n  const pubKeyUInt8Array = decodeBase64(publicKeyString);\n\n  const decryptedFileInt8 = box.open(new Uint8Array(await encryptedFile.arrayBuffer()), nonce, pubKeyUInt8Array, await getPrivateKey());\n\n  const decryptedFile = new Blob([decryptedFileInt8], {\n    type: 'application/octet-stream',\n  });\n\n  return {\n    decryptedFile,\n    fileName: `${uuidv4()}.${extension}`,\n  };\n}","import {decryptFile} from '../../../lib/utils/encryption/decrypt-file';\nimport {downloadFile} from '../../../lib/utils/files/download-file';\nimport {feedBackSuccess} from '../../../lib/feedback/success';\nimport {feedbackError} from '../../../lib/feedback/error';\nimport {useRef} from 'react';\nimport {useState} from '@hookstate/core';\nimport Modal from '../../utils/modal';\n\nexport default function DecryptFile({contact}) {\n  const inputRef = useRef();\n  const state = useState({\n    fileProcessing: false,\n    modalIsOpened: false,\n  });\n\n  function openModal(e) {\n    e.preventDefault();\n    state.merge({modalIsOpened: true});\n  }\n\n  function closeModal() {\n    if (state.fileProcessing.get()) return;\n    state.merge({modalIsOpened: false});\n  }\n\n  async function decrypt(e) {\n    e.preventDefault();\n    state.merge({\n      fileProcessing: true,\n    });\n\n    try {\n      const {decryptedFile, fileName} = await decryptFile(contact.publicKey.get(), e.target.files[0]);\n      downloadFile(decryptedFile, fileName);\n    } catch {\n      e.target.value = '';\n      state.merge({fileProcessing: false});\n      return feedbackError('Unable to decrypt file');\n    }\n\n    e.target.value = '';\n\n    state.merge({\n      fileProcessing: false,\n      modalIsOpened: false,\n    });\n\n    feedBackSuccess('File ready');\n  }\n\n  function selectFile(e) {\n    e.preventDefault();\n    inputRef.current.click();\n  }\n\n  return (\n    <>\n      <button className=\"pure-button pure-button-primary bg-black w-full\" onClick={openModal}>\n        Decrypt file\n      </button>\n\n      <Modal isOpened={state.modalIsOpened.get()} close={closeModal}>\n        <input type=\"file\" className=\"hidden\" ref={inputRef} onChange={decrypt}/>\n\n        <div className=\"my-1\">\n          As soon as the file is decrypted, you can download it\n        </div>\n\n        <button className=\"pure-button pure-button-primary bg-black w-full\" onClick={selectFile} disabled={state.fileProcessing.get()}>\n          Select encrypted file\n        </button>\n      </Modal>\n    </>\n  );\n}","import {box, randomBytes} from 'tweetnacl';\nimport {decodeBase64} from 'tweetnacl-util';\nimport {formatToBase64Undetectable} from '../undetectable/format-to-base-64-undetectable';\nimport {getPrivateKey} from './keys';\n\nexport async function encryptFile(publicKeyString, file) {\n  const nonce = randomBytes(box.nonceLength);\n  const pubKeyUInt8Array = decodeBase64(publicKeyString);\n\n  const outputFileIntArray = box(\n      new Uint8Array(await file.arrayBuffer()),\n      nonce,\n      pubKeyUInt8Array,\n      await getPrivateKey(),\n  );\n\n  const outputFile = new Blob([outputFileIntArray], {\n    type: 'application/octet-stream',\n  });\n  const extension = file.name.split('.').pop();\n\n  return {\n    fileName: `${formatToBase64Undetectable(nonce)}-${extension}.txt`,\n    outputFile,\n  };\n}","import {downloadFile} from '../../../lib/utils/files/download-file';\nimport {encryptFile} from '../../../lib/utils/encryption/encrypt-file';\nimport {feedBackSuccess} from '../../../lib/feedback/success';\nimport {useRef} from 'react';\nimport {useState} from '@hookstate/core';\nimport Modal from '../../utils/modal';\n\nexport default function EncryptFile({contact}) {\n  const inputRef = useRef();\n  const state = useState({\n    fileProcessing: false,\n    modalIsOpened: false,\n  });\n\n  function openModal(e) {\n    e.preventDefault();\n    state.merge({modalIsOpened: true});\n  }\n\n  function closeModal() {\n    if (state.fileProcessing.get()) return;\n    state.merge({modalIsOpened: false});\n  }\n\n  async function encrypt(e) {\n    e.preventDefault();\n    state.merge({\n      fileProcessing: true,\n    });\n\n    const {outputFile, fileName} = await encryptFile(contact.publicKey.get(), e.target.files[0]);\n    e.target.value = '';\n\n    downloadFile(outputFile, fileName);\n\n    state.merge({\n      fileProcessing: false,\n      modalIsOpened: false,\n    });\n\n    feedBackSuccess('File encrypted');\n  }\n\n  function selectFile(e) {\n    e.preventDefault();\n    inputRef.current.click();\n  }\n\n  return (\n    <>\n      <button className=\"pure-button pure-button-primary bg-black w-full\" onClick={openModal}>\n        Encrypt file\n      </button>\n\n      <Modal isOpened={state.modalIsOpened.get()} close={closeModal}>\n        <input type=\"file\" className=\"hidden\" ref={inputRef} onChange={encrypt}/>\n\n        <div className=\"my-1\">\n          As soon as the file is encrypted you will download it, <span className=\"font-bold\">do not rename it</span>\n        </div>\n\n        <button className=\"pure-button pure-button-primary bg-black w-full\" onClick={selectFile} disabled={state.fileProcessing.get()}>\n          Select unencrypted file\n        </button>\n      </Modal>\n    </>\n  );\n}","export function mergeStyles(...input) {\n  const output = [];\n  input.forEach((blockOfClasses) => {\n    if (!blockOfClasses) return;\n    blockOfClasses.split(/\\s/g).forEach((className) => {\n      if (className.length > 0) output.push(className);\n    });\n  });\n\n  return output.join(' ');\n}","import {feedBackSuccess} from '../../../lib/feedback/success';\nimport {mergeStyles} from '../../../lib/utils/string/merge-styles';\nimport TimeAgo from 'timeago-react';\n\nexport default function Message({message, contact}) {\n  const {messageRaw, createdAt, mine, encryptedMessage} = message;\n  let ownerClassContainer; let ownerClass;\n\n  if (mine.get()) {\n    ownerClassContainer = 'justify-end pl-20';\n    ownerClass = 'text-right';\n  } else {\n    ownerClassContainer = 'pr-20';\n    ownerClass = 'bg-green-300';\n  }\n\n  function destroy(e) {\n    e.preventDefault();\n\n    message.get().destroy(contact);\n\n    feedBackSuccess('Message removed');\n  }\n\n  return (\n    <div className={mergeStyles('flex', ownerClassContainer)}>\n      <div className={mergeStyles('whitespace-pre-wrap my-1 p-2 border border-solid border-gray-300 rounded break-all', ownerClass)}>\n        {messageRaw.get()}\n\n        <div className={mergeStyles('pt-1')}>\n          <TimeAgo datetime={createdAt.get()}/>\n        </div>\n\n        <div className=\"text-xs border-solid border-gray-300 border-t p-1\">\n          #{encryptedMessage.get().substring(0, 8)}\n          <button className=\"ml-1 text-red-500\" onClick={destroy}>\n            (x)\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}","import {copyToClipboard} from '../../../lib/utils/actions/copy-to-clipboard';\nimport {formatKeyReadable} from '../../../lib/utils/format/keys';\nimport {formatToBase64Undetectable} from '../../../lib/utils/undetectable/format-to-base-64-undetectable';\nimport {md5} from '../../../lib/utils/format/md5';\nimport {stringToU8} from '../../../lib/utils/format/string-to-u8';\nimport {undetectableSplitString} from '../../../lib/utils/undetectable/split-string';\nimport {useEffect} from 'react';\nimport {useKeyPairs} from '../../../lib/hooks/use-key-pairs';\nimport {useMultipleEncryptedStorage} from '../../../lib/hooks/use-encrypted-storage';\nimport {useState} from '@hookstate/core';\nlet copyTimeout;\n\nexport default function ShowSharablePublicKey() {\n  const {publicKey} = useKeyPairs();\n  const readableKey = formatKeyReadable(publicKey);\n  const {name, email} = useMultipleEncryptedStorage('name', 'email');\n  const encodedName = name ? formatToBase64Undetectable(stringToU8(name)) : '';\n  const encodedEmail = email ? md5(email) : '';\n  const output = `${readableKey}.${encodedName}.${encodedEmail}`;\n  const state = useState({\n    showCopied: false,\n  });\n\n  useEffect(() => {\n    return () => {\n      if (copyTimeout) clearTimeout(copyTimeout);\n    };\n  }, []);\n\n  if (!readableKey) return null;\n  if (!name || !email) return null;\n\n  function copyPk(e) {\n    e.preventDefault();\n    const undetectableStr = undetectableSplitString(output);\n    copyToClipboard(undetectableStr);\n    state.merge({showCopied: true});\n\n    copyTimeout = setTimeout(() => {\n      state.merge({showCopied: false});\n    }, 1500);\n  }\n\n  return (\n    <div className=\"p-3\">\n      <button className=\"text-center bg-gray-300 hover:bg-gray-200 rounded p-2 border border-solid border-gray-300\" onClick={copyPk}>\n        <div className=\"font-bold\">\n          My public key, name and email hashed\n        </div>\n        <div className=\"break-all\">\n          {\n            state.showCopied.get() ? 'Copied' : output\n          }\n        </div>\n\n        <div className=\"text-right text-sm\">\n          Click to copy\n        </div>\n      </button>\n    </div>\n  );\n}","import {useEffect, useRef} from 'react';\nimport CreateNewPrivateMessage from './create-new-private-message';\nimport DecodeNewPrivateMessage from './decode-new-private-message';\nimport DecryptFile from './decrypt-file';\nimport EncryptFile from './encrypt-file';\nimport Message from './message';\nimport ViewportList from 'react-viewport-list';\n\nexport default function PrivateMessages({contact}) {\n  const ref = useRef(null);\n\n  useEffect(() => {\n    if (contact.messages.length > 0) return;\n    contact.get().loadPrivateMessages(contact);\n  }, [contact.id.get()]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <div className=\"text-lg italic\">\n        Private messages\n      </div>\n\n      <div className=\"py-2 flex justify-between\">\n        <div className=\"w-1/2 pr-1\">\n          <DecodeNewPrivateMessage contact={contact}/>\n\n          <div className=\"pt-1\">\n            <DecryptFile contact={contact}/>\n          </div>\n        </div>\n        <div className=\"w-1/2 pl-1\">\n          <CreateNewPrivateMessage contact={contact}/>\n          <div className=\"pt-1\">\n            <EncryptFile contact={contact}/>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"scroll-container\" ref={ref}>\n        <ViewportList\n          viewportRef={ref}\n          items={contact.messages}\n          itemMinSize={20}\n        >\n          {(message) => (\n            <div key={message.id.get()} className=\"item\">\n              <Message message={message} contact={contact}/>\n            </div>\n          )}\n        </ViewportList>\n      </div>\n    </div>\n  );\n}","export default function PublicMessages() {\n  return (\n    <div>\n      public\n    </div>\n  );\n}","import {Helmet} from 'react-helmet-async';\nimport {Link, Route, Switch, useParams, useRouteMatch} from 'react-router-dom';\nimport {buildPageTitle} from '../page/page-title';\nimport {getContact} from '../../lib/contacts/contacts-store';\nimport {useEffect} from 'react';\nimport {useState} from '@hookstate/core';\nimport ContactAvatar from '../contacts/avatar';\nimport EditContact from './contact/edit-contact';\nimport PrivateMessages from './contact/private-messages';\nimport PublicMessages from './contact/public-messages';\n\nexport default function ContactPage() {\n  const {id} = useParams();\n  const {path, url} = useRouteMatch();\n  const state = useState({\n    contact: null,\n    ready: false,\n  });\n\n  useEffect(() => {\n    getContact(id).then((contact) => {\n      state.merge({\n        contact,\n        ready: true,\n      });\n    });\n  }, [id]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const {contact, ready} = state;\n\n  if (!contact?.id?.get() && !ready.get()) return null;\n\n  if (!contact?.id?.get()) {\n    return (\n      <>\n        <Helmet>\n          <title>{buildPageTitle('Contact not found')}</title>\n        </Helmet>\n        <div>\n          Contact not found\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{buildPageTitle(contact.name.get())}</title>\n      </Helmet>\n      <div className=\"w-full md:w-1/3 mx-auto\">\n        <div>\n          <div className=\"flex justify-center pb-2\">\n            <ContactAvatar contact={contact} height=\"h-20\" width=\"w-20\"/>\n          </div>\n          <div className=\"flex flex-wrap justify-center items-center\">\n            <h1 className=\"text-right pr-1\">{contact.name.get()}</h1>\n            <div className=\"pl-1\">\n              <EditContact contact={contact}/>\n            </div>\n          </div>\n\n          <div>\n            <div className=\"my-1 flex justify-center\">\n              <div className=\"px-1 underline\">\n                <Link to={`${url}`}>Private Messages</Link>\n              </div>\n              <div className=\"px-1 underline\">\n                <Link to={`${url}/public-messages`}>Public Messages</Link>\n              </div>\n            </div>\n\n            <Switch>\n              <Route exact path={path}>\n                <PrivateMessages contact={contact}/>\n              </Route>\n\n              <Route path={`${path}/public-messages`}>\n                <PublicMessages />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}","import {importContactFromString} from '../../../lib/contacts/import-contact-from-string';\nimport {isEmpty} from 'lodash';\nimport {useState} from '@hookstate/core';\nimport Modal from '../../utils/modal';\n\nexport function AddNewContact() {\n  const state = useState({\n    inputPkNameEmail: '',\n    modalOpened: false,\n  });\n\n  function closeModal() {\n    state.merge({modalOpened: false});\n  }\n\n  function addNewContact(e) {\n    e.preventDefault();\n    importContactFromString(state.inputPkNameEmail.get());\n    state.merge({\n      inputPkNameEmail: '',\n      modalOpened: false,\n    });\n  }\n\n  function changeInputPkNameEmail(e) {\n    const {value} = e.target;\n    state.merge({inputPkNameEmail: value});\n  }\n\n  function openModal(e) {\n    e.preventDefault();\n    state.merge({modalOpened: true});\n  }\n\n  return (\n    <div>\n      <button className=\"bg-black text-white p-3\" onClick={openModal}>\n        + Add new contact\n      </button>\n\n      <Modal isOpened={state.modalOpened.get()} close={closeModal}>\n        <form className=\"pure-form pure-form-aligned\" onSubmit={addNewContact}>\n          <fieldset>\n            <legend>Contact public key, name and email hashed</legend>\n\n            <div className=\"pure-control-group\">\n              <input name=\"inputPkNameEmail\" value={state.inputPkNameEmail.get()} onChange={changeInputPkNameEmail} placeholder=\"Paste the contact code\" className=\"w-full\"/>\n            </div>\n\n            <button type=\"submit\" className=\"pure-button pure-button-primary bg-black w-full\" disabled={isEmpty(state.inputPkNameEmail.get())}>\n              Add\n            </button>\n          </fieldset>\n        </form>\n      </Modal>\n    </div>\n  );\n}","import {isEmpty} from 'lodash';\nimport {v4 as uuidv4} from 'uuid';\n\nimport {RecordContact} from './record-contact';\nimport {restoreBase64String} from '../utils/undetectable/decode-base-64-undetectable';\n\nexport function importContactFromString(str) {\n  let [publicKey, name, emailHash] = str.replace(/\\s/g, '').split('.');\n  name = atob(name);\n\n  name = isEmpty(name) ? 'Unknown user' : name;\n\n  const record = new RecordContact({\n    emailHash, id: uuidv4(), name, publicKey: restoreBase64String(publicKey),\n  });\n  record.save();\n}","import {Link} from 'react-router-dom';\nimport ContactAvatar from '../../contacts/avatar';\n\nexport default function ContactListItem({contact}) {\n  function destroyContact(e) {\n    e.preventDefault();\n    contact.get().destroy();\n  }\n\n  return (\n    <div className=\"flex flex-wrap items-center justify-between p-2 bg-gray-300 my-2 rounded\">\n      <div>\n        <Link to={`/contacts/${contact.id.get()}`}>\n          <div className=\"flex items-center\">\n            <ContactAvatar contact={contact} height=\"h-20\" width=\"w-20\"/>\n            <span className=\"pl-2\">\n              {contact.name.get()}\n            </span>\n          </div>\n        </Link>\n      </div>\n\n      <div>\n        <button onClick={destroyContact}>\n          Remove\n        </button>\n      </div>\n    </div>\n  );\n}","import {contactsStore} from '../../../lib/contacts/contacts-store';\nimport {useRef} from 'react';\nimport {useState} from '@hookstate/core';\nimport ContactListItem from './contact-list-item';\nimport ViewportList from 'react-viewport-list';\n\nexport default function ContactsList() {\n  const state = useState(contactsStore);\n  const ref = useRef(null);\n\n  return (\n    <div className=\"scroll-container\" ref={ref}>\n      <ViewportList\n        viewportRef={ref}\n        items={state.contacts}\n        itemMinSize={20}\n      >\n        {(contact) => (\n          <div key={contact.id.get()} className=\"item\">\n            <ContactListItem contact={contact}/>\n          </div>\n        )}\n      </ViewportList>\n    </div>\n  );\n}","import {getContactsStore} from '../../../lib/contacts/contacts-store';\nimport {useEffect, useState} from 'react';\n\nexport default function ContactsStoreLoader({children}) {\n  const [contactsStore, setContactsStore] = useState();\n  useEffect(() => {\n    getContactsStore().then((c) => {\n      setContactsStore(c);\n    });\n  }, [setContactsStore]);\n\n  if (!contactsStore) return null;\n\n  return children;\n}","import {useLocalForage} from '../../../lib/hooks/use-local-forage';\nimport {useState} from '@hookstate/core';\nimport Modal from '../../utils/modal';\n\nexport default function ToggleEnableGravatar() {\n  const [gravatarEnabled, setGravatar] = useLocalForage('gravatar-enabled');\n  const state = useState({\n    modalIsOpened: false,\n  });\n  function closeModal() {\n    state.merge({modalIsOpened: false});\n  }\n\n  function openModal(e) {\n    e.preventDefault();\n    state.merge({modalIsOpened: true});\n  }\n\n  if (gravatarEnabled === 'NOT_READY') return null;\n\n  function handleChange() {\n    setGravatar(!gravatarEnabled);\n  }\n\n  return (\n    <div>\n      <div className=\"flex items-center\">\n        <input type=\"checkbox\" checked={!!gravatarEnabled} onChange={handleChange}/>\n        <span className=\"ml-1\">\n          Toggle gravatar\n        </span>\n      </div>\n\n      <div className=\"mt-1\">\n        <button className=\"underline\" onClick={openModal}>\n          Is gravatar safe?\n        </button>\n      </div>\n\n      <Modal isOpened={state.modalIsOpened.get()} close={closeModal}>\n        <div>\n          <h1 className=\"text-xl font-bold\">Is gravatar safe?</h1>\n\n          <div>\n            The short answer if you need 100% security is <b>NO</b>.\n          </div>\n          <div>\n            Otherwise <b>maybe</b>, because you get tracked by gravatar, but they store images for free. Depends on you if are going to accept that risk.\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n}","import {AddNewContact} from './contacts/add-new-contact';\nimport {Helmet} from 'react-helmet-async';\nimport {buildPageTitle} from '../page/page-title';\nimport ContactsList from './contacts/ contacts-list';\nimport ContactsStoreLoader from './contacts/contacts-store-loader';\nimport ToggleEnableGravatar from './contacts/toggle-enable-gravatar';\n\nexport default function ContactsPage() {\n  return (\n    <>\n      <Helmet>\n        <title>{buildPageTitle('Contacts')}</title>\n      </Helmet>\n      <div className=\"w-full md:w-1/3 mx-auto pt-4\">\n        <h1 className=\"text-center text-2xl font-bold\">Contacts</h1>\n\n        <div className=\"flex justify-between\">\n          <ToggleEnableGravatar/>\n\n          <AddNewContact/>\n        </div>\n\n        <div>\n          <ContactsStoreLoader>\n            <ContactsList/>\n          </ContactsStoreLoader>\n        </div>\n      </div>\n    </>\n  );\n}","import {MD5 as cryptoMd5} from 'crypto-js';\n\nexport function md5(str) {\n  return cryptoMd5(str).toString();\n}","import {feedBackSuccess} from '../../../lib/feedback/success';\nimport {md5} from '../../../lib/utils/format/md5';\nimport {useEncryptedStorage} from '../../../lib/hooks/use-encrypted-storage';\nimport {useState} from '@hookstate/core';\nimport ContactAvatar from '../../contacts/avatar';\nimport Modal from '../../utils/modal';\n\nexport default function EditProfile() {\n  const [name, setName] = useEncryptedStorage('name');\n  const [email, setEmail] = useEncryptedStorage('email');\n\n  const state = useState({\n    modalIsOpened: false,\n  });\n  function closeModal() {\n    state.merge({modalIsOpened: false});\n  }\n\n  function openModal(e) {\n    e.preventDefault();\n    state.merge({modalIsOpened: true});\n  }\n\n  function updateName(e) {\n    setName(e.target.value);\n  }\n\n  function updateEmail(e) {\n    setEmail(e.target.value);\n  }\n\n  function save(e) {\n    e.preventDefault();\n    closeModal();\n    feedBackSuccess('Profile saved');\n  }\n\n  return (\n    <>\n      <button className=\"underline\" onClick={openModal}>\n        Edit profile\n      </button>\n\n      <Modal isOpened={state.modalIsOpened.get()} close={closeModal}>\n        <form className=\"pure-form pure-form-aligned\" onSubmit={save}>\n          <fieldset>\n            <legend>Edit profile</legend>\n\n            <div className=\"flex justify-center\">\n              <ContactAvatar emailHash={md5(email)} height=\"h-20\" width=\"w-20\"/>\n            </div>\n          </fieldset>\n\n          <div className=\"pure-control-group\">\n            <input name=\"name\" value={name} onChange={updateName} placeholder=\"Name\" className=\"w-full\" required/>\n          </div>\n\n          <div className=\"pure-control-group\">\n            <input name=\"email\" value={email} onChange={updateEmail} placeholder=\"Email(optional)\" className=\"w-full\"/>\n            <span className=\"pure-form-message\">Only the email MD5 hash is shared, not your real email. A image can be set for this email on <a className=\"underline\" href=\"https://gravatar.com/\" target=\"_blank\">gravatar.com</a></span>\n          </div>\n\n          <button type=\"submit\" className=\"pure-button pure-button-primary w-full bg-black\">\n            Save\n          </button>\n        </form>\n      </Modal>\n    </>\n  );\n}","export function stringToU8(str) {\n  return new TextEncoder().encode(str);\n}","import {formatToBase64Undetectable} from '../undetectable/format-to-base-64-undetectable';\n\nexport function formatKeyReadable(key) {\n  return formatToBase64Undetectable(key);\n}","import {Helmet} from 'react-helmet-async';\nimport {Link} from 'react-router-dom';\nimport {buildPageTitle} from '../page/page-title';\nimport EditProfile from './home/edit-profile';\nimport ShowSharablePublicKey from './home/show-sharable-public-key';\n\nexport default function HomePage() {\n  return (<>\n    <Helmet>\n      <title>{buildPageTitle('Home')}</title>\n    </Helmet>\n\n    <div className=\"mx-auto md:w-1/3 w-full my-2 flex justify-between\">\n      <Link to=\"/about\">\n        <span className=\"underline\">About</span>\n      </Link>\n\n      <EditProfile/>\n\n      <Link to=\"/backup\">\n        <span className=\"underline\">Backup service</span>\n      </Link>\n    </div>\n\n    <div className=\"flex justify-center\">\n      <ShowSharablePublicKey/>\n    </div>\n  </>);\n}","export default function PageNotFound() {\n  return (\n    <div className=\"text-center text-3xl font-bold\">\n      Page not found\n    </div>\n  );\n}","import {\n  HashRouter,\n} from 'react-router-dom';\n\nexport default function Router({children}) {\n  return (\n    <HashRouter>\n      {children}\n    </HashRouter>\n  );\n}","import * as localforage from 'localforage';\n\nexport function restoreBackupFromJsonFile(file) {\n  return new Promise((resolve) => {\n    const fileReader = new FileReader();\n    fileReader.onload = async (e) => {\n      const json = JSON.parse(e.target.result);\n      await localforage.clear();\n\n      const promises = [];\n\n      for (const k in json) {\n        const v = json[k];\n\n        promises.push(localforage.setItem(k, v));\n      }\n\n      await Promise.all(promises);\n\n      resolve();\n    };\n    fileReader.readAsText(file);\n  });\n}","import {Helmet} from 'react-helmet-async';\nimport {buildPageTitle} from '../page/page-title';\nimport {getItemFromStorage, setStoragePin} from '../../lib/utils/encryption/storage';\nimport {isEmpty} from 'lodash';\nimport {restoreBackupFromJsonFile} from '../../lib/backup/restore-from-json-file';\nimport {useHistory} from 'react-router-dom';\nimport {useKeyPairs} from '../../lib/hooks/use-key-pairs';\nimport {useQueryParams} from '../../lib/hooks/use-query-params';\nimport {useState as useReactState} from 'react';\nimport {useState} from '@hookstate/core';\nimport Modal from '../utils/modal';\nimport logo from '../../assets/enigma-logo.jpg';\n\nexport default function UnlockPage() {\n  const state = useState({backupValue: '', modalOpened: false, pinValue: '', showError: false});\n  const [fileState, setFileState] = useReactState();\n  const history = useHistory();\n  const queryParams = useQueryParams();\n  const {setKeyPair} = useKeyPairs();\n\n  async function unlock(e) {\n    e.preventDefault();\n    const redirectTo = queryParams.get('redirectTo') || '/';\n    setStoragePin(state.pinValue.get());\n\n    try {\n      if (!isEmpty(state.backupValue)) {\n        await restoreBackupFromJsonFile(fileState);\n      }\n      const keyPair = await getItemFromStorage('key-pair');\n      if (isEmpty(keyPair)) {\n        return state.merge({\n          backupFile: null,\n          backupValue: '',\n          modalOpened: false,\n          pinValue: '',\n          showError: true,\n        });\n      }\n      setKeyPair(keyPair);\n\n      history.push(redirectTo);\n    } catch (e) {\n      return state.merge({\n        backupFile: null,\n        backupValue: '',\n        modalOpened: false,\n        pinValue: '',\n        showError: true,\n      });\n    }\n  }\n\n  function updatePinValue(e) {\n    const {value} = e.target;\n    state.merge({pinValue: value});\n  }\n\n  function updateBackupValue(e) {\n    const {value} = e.target;\n    state.merge({backupValue: value});\n    setFileState(e.target.files[0]);\n  }\n\n  function openModal(e) {\n    e.preventDefault();\n    state.merge({modalOpened: true});\n  }\n\n  function closeModal() {\n    state.merge({modalOpened: false});\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>{buildPageTitle('Unlock')}</title>\n      </Helmet>\n      <div className=\"w-full md:w-1/3 mx-auto\">\n        <div className=\"flex justify-center\">\n          <img src={logo} alt=\"enigma\"/>\n        </div>\n\n        <form className=\"pure-form\" onSubmit={unlock}>\n          <fieldset>\n\n            <div className=\"pure-control-group py-2\">\n              <input type=\"password\" value={state.pinValue.get()} onChange={updatePinValue} className=\"w-full\" placeholder=\"Enter your PIN to continue\"/>\n              {\n                state.showError.get() && <span className=\"pure-form-message text-red-500\">Invalid PIN</span>\n              }\n            </div>\n\n            <button type=\"submit\" className=\"pure-button pure-button-primary w-full bg-black font-bold\" disabled={isEmpty(state.pinValue.get())}>\n              Unlock\n            </button>\n\n            <div className=\"pure-control-group pt-4\">\n              <div className=\"flex justify-end\">\n                <button onClick={openModal} className=\"underline\">\n                  Restore from backup\n                </button>\n              </div>\n              <Modal isOpened={state.modalOpened.get()} close={closeModal}>\n                <h1 className=\"font-lg font-bold\">Restore from backup</h1>\n\n                <p>Select a backup file:</p>\n                <input type=\"file\" accept=\".json\" value={state.backupValue.get()} onChange={updateBackupValue}/>\n\n                <div className=\"pt-2\">\n                  <span className=\"font-bold\">Warning</span>, restoring data from a backup, <em>will override the current data</em>\n                  <div>\n                    Make sure, that you have a <b>backup of the current data</b>.\n                  </div>\n                  <div>\n                    If you have a backup, then it's safe.\n                  </div>\n                </div>\n              </Modal>\n            </div>\n          </fieldset>\n        </form>\n      </div>\n    </>\n  );\n}","import {\n  useLocation,\n} from 'react-router-dom';\n\nexport function useQueryParams() {\n  return new URLSearchParams(useLocation().search);\n}","import 'purecss';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {AppSetup} from './components/page/app-setup';\nimport {\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport {ToastContainer} from 'react-toastify';\nimport {UnlockedRoute} from './components/page/unlocked';\nimport AboutPage from './components/pages/about';\nimport AppLayout from './components/page/layout';\nimport BackupPage from './components/pages/backup';\nimport ContactPage from './components/pages/contact';\nimport ContactsPage from './components/pages/contacts';\nimport HomePage from './components/pages/home';\nimport PageNotFound from './components/pages/page-not-found';\nimport PageTitle from './components/page/page-title';\nimport Router from './components/config/router';\nimport UnlockPage from './components/pages/unlock';\n\nexport default function App() {\n  return (\n    <>\n      <PageTitle>\n        <Router>\n          <AppLayout>\n            <Switch>\n              <UnlockedRoute path=\"/\" exact>\n                <HomePage/>\n              </UnlockedRoute>\n\n              <UnlockedRoute path=\"/about\">\n                <AboutPage/>\n              </UnlockedRoute>\n\n              <UnlockedRoute path=\"/backup\">\n                <BackupPage/>\n              </UnlockedRoute>\n\n              <UnlockedRoute path=\"/contacts/:id\">\n                <ContactPage/>\n              </UnlockedRoute>\n\n              <UnlockedRoute path=\"/contacts\">\n                <ContactsPage/>\n              </UnlockedRoute>\n\n              <Route path=\"/unlock\">\n                <AppSetup>\n                  <UnlockPage/>\n                </AppSetup>\n              </Route>\n\n              <Route path=\"*\">\n                <PageNotFound/>\n              </Route>\n            </Switch>\n          </AppLayout>\n        </Router>\n      </PageTitle>\n      <ToastContainer/>\n    </>\n  );\n}","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\nimport './tailwind.css';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport App from './app';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\nserviceWorkerRegistration.register();\n\nreportWebVitals();\n"],"sourceRoot":""}